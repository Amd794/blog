<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>F表达式 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/F%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><description>Recent content in F表达式 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 02 May 2025 20:33:32 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/F%E8%A1%A8%E8%BE%BE%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI中的复杂查询与原子更新指南</title><link>https://blog.cmdragon.cn/posts/f8a2c5f2662532fe5dca3a3e1f7e0b20/</link><pubDate>Fri, 02 May 2025 20:33:32 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f8a2c5f2662532fe5dca3a3e1f7e0b20/</guid><description>FastAPI 结合 Tortoise-ORM 实现复杂查询与原子更新。通过 Q 对象构建多条件查询，支持 AND、OR、NOT 逻辑运算符，动态组合查询条件。使用 F 表达式进行原子更新，避免竞态条件，确保数据一致性。示例包括订单状态与金额的复杂查询、库存扣减的原子操作，以及商品促销的价格更新。常见错误包括字段拼写错误、类型不匹配和空结果集，需通过模型检查和异常处理解决。</description></item><item><title>掌握Tortoise-ORM高级异步查询技巧</title><link>https://blog.cmdragon.cn/posts/8a980d4fc84da8b38dfc6da3b16a9818/</link><pubDate>Tue, 22 Apr 2025 12:05:33 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/8a980d4fc84da8b38dfc6da3b16a9818/</guid><description>Tortoise-ORM 提供了强大的异步查询功能，支持通过 Q 对象构建复杂查询条件，如逻辑运算符组合和动态条件构建。F 表达式用于字段级别的原子操作，避免竞争条件，适用于库存扣减和价格调整等场景。组合查询可通过注解和过滤实现复杂业务需求。常见错误包括字段不一致、未知字段和事务管理问题，需通过数据库迁移和异步上下文管理解决。</description></item></channel></rss>