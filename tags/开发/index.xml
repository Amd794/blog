<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%BC%80%E5%8F%91/</link><description>Recent content in 开发 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 28 Nov 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 dev：ssr-logs 事件钩子</title><link>https://blog.cmdragon.cn/posts/ef86af3b9be34b11d75fa32951b147bd/</link><pubDate>Thu, 28 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ef86af3b9be34b11d75fa32951b147bd/</guid><description>dev:ssr-logs 是一个用在服务器端渲染（SSR）中，用于输出日志的事件钩子。这个钩子会在请求周期结束时被调用，产生的参数包括日志路径与日志内容。这对于调试和监控服务器端的行为非常有用，特别是在开发环境下。</description></item><item><title>Nuxt.js 应用中的 webpack：compiled 事件钩子</title><link>https://blog.cmdragon.cn/posts/077a6b701325cff54c081bf5946d5477/</link><pubDate>Sat, 23 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/077a6b701325cff54c081bf5946d5477/</guid><description>webpack:compiled 钩子是在 Webpack 完成编译后调用的一个重要钩子。它允许开发者在资源加载并生成后的时刻执行一些特定的操作，比如处理生成的文件、记录日志、或者进行特定的清理工作。</description></item><item><title>Nuxt.js 应用中的 webpack：configResolved事件钩子</title><link>https://blog.cmdragon.cn/posts/c9d5ec8a241258b72058270c7c4a22e5/</link><pubDate>Thu, 21 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c9d5ec8a241258b72058270c7c4a22e5/</guid><description>在 Nuxt.js 项目中，webpack:configResolved 钩子允许开发者在 Webpack 配置被解析后读取和修改该配置。这一钩子在所有 Webpack 配置被合并和确定后调用，为开发者提供了更进一步自定义的机会。</description></item><item><title>Nuxt.js 应用中的 vite：serverCreated 事件钩子</title><link>https://blog.cmdragon.cn/posts/29cac3fa837d4b767f01a77d6adc60e1/</link><pubDate>Mon, 18 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/29cac3fa837d4b767f01a77d6adc60e1/</guid><description>通过使用 vite:serverCreated 钩子，开发者可以在 Vite 服务器创建时执行特定的操作，包括添加中间件和自定义配置。这使得在开发环境中能够快速响应请求及调整服务器行为，从而提升开发效率和用户体验。</description></item><item><title>Nuxt.js 应用中的 vite：extendConfig 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</link><pubDate>Tue, 12 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</guid><description>vite:extendConfig 钩子允许开发者在 Vite 项目中扩展默认配置。这使得开发者可以根据特定需求自定义 Vite 的构建和开发行为，增强开发体验。</description></item><item><title>Nuxt.js 应用中的 vite：extend 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/cdba81aa5bb32dcc233a8bd29adee923/</link><pubDate>Mon, 11 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/cdba81aa5bb32dcc233a8bd29adee923/</guid><description>vite:extend 钩子允许开发者在 Vite 项目中扩展默认开发和构建配置。这使得开发者能够根据特定需求自定义 Vite 的行为，增强开发体验。</description></item><item><title>Nuxt.js 应用中的 listen 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/59f320ae722d9803c0c4eb42ccb295b2/</link><pubDate>Sat, 09 Nov 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/59f320ae722d9803c0c4eb42ccb295b2/</guid><description>它为开发者提供了一个自由的空间可以在开发服务器启动时插入自定义逻辑。通过合理利用这个钩子，开发者能够提升代码的可维护性和调试能力。注意处理性能、错误和环境等方面的问题可以帮助您构建一个更加稳定和高效的应用。</description></item><item><title>Nuxt.js 应用中的 server：devHandler 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/e3271aac91ec30fc15176811b001ed48/</link><pubDate>Sat, 26 Oct 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e3271aac91ec30fc15176811b001ed48/</guid><description>server:devHandler 是 Nuxt.js 中的一个生命周期钩子，它在 Nitro 开发服务器注册开发中间件时被调用。使用这个钩子，开发者可以为开发服务器添加自定义中间件，从而丰富应用的处理逻辑和功能。</description></item><item><title>Nuxt.js 应用中的 builder：watch 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/4cfe5f35f1a903646731a6c05a54d1dc/</link><pubDate>Thu, 24 Oct 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/4cfe5f35f1a903646731a6c05a54d1dc/</guid><description>builder:watch 是 Nuxt.js 中的一个生命周期钩子，在开发环境的构建过程期间被调用。它允许开发者在监视到项目中的文件或目录发生变化时，执行特定的操作。这对于实现自定义构建过程或响应代码更改非常有用，使得开发体验更为高效。</description></item><item><title>Nuxt.js 应用中的 kit：compatibility 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/5892994c55ef47a9af4acfc446d8e923/</link><pubDate>Fri, 11 Oct 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/5892994c55ef47a9af4acfc446d8e923/</guid><description>kit:compatibility 是处理浏览器兼容性问题的有效工具。正如本篇文章中所述，合理地利用这一钩子可以提升用户体验，并确保应用在不同环境中都能稳定运行。</description></item><item><title>Nuxt Kit 组件管理：注册与自动导入</title><link>https://blog.cmdragon.cn/posts/c5f0133bf1d896616b703a00c560fb9b/</link><pubDate>Sun, 15 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c5f0133bf1d896616b703a00c560fb9b/</guid><description>Nuxt Kit 为组件的注册和导入提供了灵活高效的解决方案。无论你是要批量导入组件，还是单独处理特定组件，这些工具都能够满足你的需求。使用这些方法可以显著提升开发效率、减少管理复杂性。</description></item><item><title>使用 nuxi upgrade 升级现有nuxt项目版本</title><link>https://blog.cmdragon.cn/posts/0e0c114dbed4df069069c50bc4b57510/</link><pubDate>Tue, 10 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0e0c114dbed4df069069c50bc4b57510/</guid><description>摘要：本文介绍了如何使用nuxi upgrade命令升级Nuxt 3项目，包括打开终端、运行升级命令、使用选项、测试项目等步骤，以及升级前的注意事项，如备份代码、检查文档和依赖问题处理，帮助开发者轻松完成项目升级。</description></item><item><title>使用 nuxi init 创建全新 Nuxt 项目</title><link>https://blog.cmdragon.cn/posts/e215ae9d731aea9f7b5d6aef7aa1a4db/</link><pubDate>Fri, 06 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e215ae9d731aea9f7b5d6aef7aa1a4db/</guid><description>摘要：本文介绍了如何使用nuxi init命令创建全新的Nuxt.js项目，包括安装所需环境、命令使用方法、指定模板、强制克隆、启动开发服务器等步骤，并提供了完整的项目初始化流程示例，帮助开发者快速上手Nuxt.js框架进行高效Web应用开发。</description></item><item><title>探索 Nuxt Devtools：功能全面指南</title><link>https://blog.cmdragon.cn/posts/ba266042f1b1b5d48140c44161ea0421/</link><pubDate>Tue, 03 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ba266042f1b1b5d48140c44161ea0421/</guid><description>摘要：本文介绍了Nuxt Devtools的功能和使用方法，包括自动安装、手动安装和各项主要功能，如页面、组件、构建分析等。</description></item><item><title>使用 nuxi clean 命令清理 Nuxt 项目</title><link>https://blog.cmdragon.cn/posts/4382efd355d49a6c8c6ca9f96c90fe8d/</link><pubDate>Sun, 01 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/4382efd355d49a6c8c6ca9f96c90fe8d/</guid><description>nuxi clean 命令是管理和维护 Nuxt 项目的重要工具，它帮助你快速清理生成的文件和缓存，确保开发环境的干净。通过定期使用这个命令，你可以避免由于缓存或生成文件导致的构建问题，从而提升开发效率和项目稳定性。</description></item><item><title>使用 nuxi add 快速创建 Nuxt 应用组件</title><link>https://blog.cmdragon.cn/posts/917849288e8e1cc200cdd37a60e48387/</link><pubDate>Wed, 28 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/917849288e8e1cc200cdd37a60e48387/</guid><description>通过使用 nuxi add 命令，你可以快速创建 Nuxt 应用中的各种实体，如组件、页面、布局等。这可以极大地提高开发效率，减少手动创建文件的工作量。希望本文的示例和解释能够帮助你更好地使用 nuxi add 命令来加速你的开发过程。</description></item><item><title>使用 updateAppConfig 更新 Nuxt 应用配置</title><link>https://blog.cmdragon.cn/posts/870198cdff2bbd91a5af2182da7662a8/</link><pubDate>Tue, 27 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/870198cdff2bbd91a5af2182da7662a8/</guid><description>通过使用 updateAppConfig，你可以轻松地在应用运行时更新配置，而无需重新启动应用。这对于需要在运行时调整设置的应用场景非常有用。</description></item><item><title>使用 preloadComponents 进行组件预加载</title><link>https://blog.cmdragon.cn/posts/b54b94bb4434e506c17b07f68a13bf94/</link><pubDate>Sun, 18 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b54b94bb4434e506c17b07f68a13bf94/</guid><description>摘要：本文介绍Nuxt 3中的preloadComponents功能，用于预加载全局注册的组件以减少首次渲染阻塞时间，通过实例演示如何设置并使用该工具来提升页面性能。</description></item><item><title>使用 onBeforeRouteLeave 组合式函数提升应用的用户体验</title><link>https://blog.cmdragon.cn/posts/ec76c32456eed5c68935b916beb053c2/</link><pubDate>Wed, 14 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ec76c32456eed5c68935b916beb053c2/</guid><description>摘要：本文介绍了在Nuxtjs中使用onBeforeRouteLeave组合式函数来提升应用用户体验的方法。onBeforeRouteLeave允许在组件离开当前路由前执行逻辑，如处理路由变化、清理资源、保存数据等。文章通过示例展示了如何在Vue组件中注册此守卫，解释了其参数含义及使用注意事项，并提供了完整示例代码，强调了此功能对增强用户体验的重要性。</description></item><item><title>使用 useRequestEvent Hook 访问请求事件</title><link>https://blog.cmdragon.cn/posts/7f6aeaffdd673a716b7f013f59aa69af/</link><pubDate>Tue, 23 Jul 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/7f6aeaffdd673a716b7f013f59aa69af/</guid><description>摘要：本文介绍Nuxt 3中useRequestEventHook的使用，可访问请求路径、方法和头部信息，适用于SSR环境下处理请求逻辑，如中间件、插件及API路由。仅服务器端生效，需注意安全性。</description></item><item><title>Nuxt.js 中使用 useHydration 实现数据水合与同步</title><link>https://blog.cmdragon.cn/posts/c7ddeca4690387e7e08c83e6c482a576/</link><pubDate>Thu, 18 Jul 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c7ddeca4690387e7e08c83e6c482a576/</guid><description>摘要：介绍Nuxt.js中useHydration函数，用于控制客户端与服务器数据同步，实现数据水合。参数包括key、get和set函数，适用于多种场景，示例展示数据获取与显示流程。</description></item><item><title>Nuxt框架中内置组件详解及使用指南（二）</title><link>https://blog.cmdragon.cn/posts/658c8df0cd7e59fe7606507b14b2c37c/</link><pubDate>Sun, 07 Jul 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/658c8df0cd7e59fe7606507b14b2c37c/</guid><description>摘要：“本文详细介绍了Nuxt 3中&lt;NuxtPage>和&lt;NuxtLayout>组件的使用方法，包括组件的基本概念、属性、自定义属性、获取引用以及完整示例，展示了如何在Nuxt项目中有效利用这两个组件。</description></item></channel></rss>