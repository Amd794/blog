<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库会话管理 on cmdragon's Blog</title><link>/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/</link><description>Recent content in 数据库会话管理 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 14 Apr 2025 00:28:46 +0800</lastBuildDate><atom:link href="/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>SQLAlchemy 核心概念与同步引擎配置详解</title><link>/posts/de9dea9606a04d21ae60cbc315397580/</link><pubDate>Mon, 14 Apr 2025 00:28:46 +0800</pubDate><guid>/posts/de9dea9606a04d21ae60cbc315397580/</guid><description>SQLAlchemy 的核心概念包括 ORM、Engine、Connection 和 Session。ORM 将数据库表映射为 Python 类，行记录转为对象实例。Engine 管理数据库连接池，Connection 是具体连接，Session 跟踪对象状态变化。同步引擎配置涉及安装依赖、创建引擎、定义模型类及与 FastAPI 集成。连接池通过 pool_size、max_overflow 和 pool_recycle 管理连接。Session 生命周期需正确管理，避免连接泄漏和数据不一致。常见错误包括表不存在、连接池溢出和验证错误，需通过建表、调整连接池配置和请求模型验证解决。</description></item><item><title>FastAPI中的依赖注入与数据库事务管理</title><link>/posts/edd7eaa71626c5d5d95f7a07c538cfe1/</link><pubDate>Wed, 09 Apr 2025 00:10:29 +0800</pubDate><guid>/posts/edd7eaa71626c5d5d95f7a07c538cfe1/</guid><description>文章介绍了在FastAPI中使用依赖注入和SQLAlchemy进行数据库会话封装的方法，提供了三种事务管理模式的实现：自动事务模式、手动控制模式和装饰器模式。通过代码示例展示了如何创建用户注册功能，并处理事务和错误。强调了使用参数化查询防止SQL注入攻击的重要性，并提供了常见报错的解决方案，包括检查数据库连接参数、管理会话生命周期和调整连接池设置。</description></item></channel></rss>