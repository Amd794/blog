<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>权限校验 on cmdragon's Blog</title><link>/tags/%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/</link><description>Recent content in 权限校验 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 25 Jun 2025 09:01:42 +0800</lastBuildDate><atom:link href="/tags/%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI权限校验漏洞防护，你真的做对了吗？</title><link>/posts/e4f0dd2a60b455bdcd55a1de472d67ee/</link><pubDate>Wed, 25 Jun 2025 09:01:42 +0800</pubDate><guid>/posts/e4f0dd2a60b455bdcd55a1de472d67ee/</guid><description>FastAPI权限校验是保护API资源的关键，通过认证和授权机制确保用户访问权限。常见安全漏洞包括横向越权、SQL注入和XSS攻击，解决方案包括资源归属验证、参数化查询和安全头部配置。FastAPI通过依赖注入和OAuth2、JWT技术实现模块化权限控制，角色权限模型和权限校验依赖项确保路由安全。常见错误如401 Unauthorized、422 Validation Error和403 Forbidden，需检查令牌、参数验证和用户权限设置。最佳实践强调在后端实施资源归属检查和ORM参数化查询，防止越权和注入风险。</description></item><item><title>FastAPI安全认证中的依赖组合</title><link>/posts/116bd5f3dfe8c9fdee45a81e7fe75181/</link><pubDate>Sat, 12 Apr 2025 00:44:08 +0800</pubDate><guid>/posts/116bd5f3dfe8c9fdee45a81e7fe75181/</guid><description>FastAPI框架中，依赖注入机制用于实现安全认证体系，通过将复杂业务逻辑拆分为多个可复用的依赖项。安全认证流程包括凭证提取、令牌解析和权限校验三个关键阶段。组合依赖项设计可实现管理员操作端点的安全控制，如JWT令牌生成与验证、用户权限校验等。测试用例验证了不同权限用户的访问控制。常见错误如401、403和422，可通过检查请求头、验证令牌和匹配数据类型解决。</description></item></channel></rss>