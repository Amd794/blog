<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue 3 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Vue-3/</link><description>Recent content in Vue 3 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 07 Oct 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Vue-3/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 link：prefetch 钩子详解</title><link>https://blog.cmdragon.cn/posts/c9630bf715f84414f544802edae0e77a/</link><pubDate>Mon, 07 Oct 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c9630bf715f84414f544802edae0e77a/</guid><description>link:prefetch 是一个强大的钩子，允许开发者在链接预取时执行附加逻辑。合理利用这个钩子，可以帮助优化页面的加载速度和用户体验，提升 Web 应用的整体性能。</description></item><item><title>初学者必读：如何使用 Nuxt 中间件简化网站开发</title><link>https://blog.cmdragon.cn/posts/5f903ecf37e457f68874ec0e3e7fac54/</link><pubDate>Mon, 24 Jun 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/5f903ecf37e457f68874ec0e3e7fac54/</guid><description>本文概述了Nuxt 3框架的升级特点，对比Nuxt 2，详细解析中间件应用、配置策略与实战示例，涵盖功能、错误管理、优化技巧，并探讨与Nuxt 3核心组件集成方法，给出最佳实践和问题解决方案，强调利用Vue 3和Serverless Functions提升中间件效能。</description></item><item><title>Vue 3与ESLint、Prettier：构建规范化的前端开发环境</title><link>https://blog.cmdragon.cn/posts/4b2411a2957afd41b70bb48b0668275d/</link><pubDate>Tue, 11 Jun 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/4b2411a2957afd41b70bb48b0668275d/</guid><description>这篇文章介绍了如何在Vue 3项目中配置ESLint和Prettier以统一代码风格，实现代码规范性与可读性的提升。通过设置规则、解决冲突、以及将配置融入持续集成流程和代码审查过程，确保团队协作时代码风格的一致性，提升开发效率与项目维护性。</description></item></channel></rss>