<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>权限管理 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link><description>Recent content in 权限管理 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 26 Jun 2025 07:35:35 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI权限配置：你的系统真的安全吗？</title><link>https://blog.cmdragon.cn/posts/96b6ede65030daa4613ab92da1d739a6/</link><pubDate>Thu, 26 Jun 2025 07:35:35 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/96b6ede65030daa4613ab92da1d739a6/</guid><description>FastAPI生产环境权限配置涉及多个核心要素，包括用户认证、权限验证和资源访问控制。生产环境需满足HTTPS强制启用、强密码策略、登录失败锁定机制等安全要求。权限验证通过依赖注入实现，推荐使用RBAC模型进行角色权限管理。动态权限配置支持通过接口添加角色权限。实践案例展示了基于组织架构的文件下载权限控制。常见报错如403 Forbidden和422 Validation Error，需检查权限配置和请求头格式。</description></item><item><title>FastAPI如何用角色权限让Web应用安全又灵活？</title><link>https://blog.cmdragon.cn/posts/cc7aa0af577ae2bc0694e76886373e12/</link><pubDate>Fri, 13 Jun 2025 05:46:55 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/cc7aa0af577ae2bc0694e76886373e12/</guid><description>基于角色的路由访问控制是Web应用中常见的安全控制模式，通过为用户分配特定角色来管理权限。FastAPI利用依赖注入系统实现权限控制，具有解耦、模块化、兼容OpenAPI等优势。权限验证流程包括请求拦截、角色解析和权限校验三个阶段。通过定义数据模型和核心权限验证模块，可以实现企业级权限控制方案。常见报错如422、401、403等，可通过调试和错误处理机制解决。动态权限管理建议使用RBAC数据库结构，多角色用户可通过中间表实现。</description></item><item><title>如何用FastAPI和Tortoise-ORM打造一个既高效又灵活的角色管理系统？</title><link>https://blog.cmdragon.cn/posts/2b0a2003074eba56a6f6c57aa9690900/</link><pubDate>Wed, 11 Jun 2025 13:18:54 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/2b0a2003074eba56a6f6c57aa9690900/</guid><description>角色模型设计包含核心字段如唯一标识、角色名称、描述、启用状态和创建时间。权限关联通过多对多关系实现，角色与权限通过中间表关联。完整的CRUD接口包括创建角色、获取角色信息等操作。数据库关系映射实战展示了如何为角色分配权限。常见报错解决方案提供了初始化数据库和处理请求体字段错误的指导。</description></item><item><title>FastAPI权限迷宫：RBAC与多层级依赖的魔法通关秘籍</title><link>https://blog.cmdragon.cn/posts/ee5486714707d4835d4a774696dca30a/</link><pubDate>Wed, 04 Jun 2025 21:17:50 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ee5486714707d4835d4a774696dca30a/</guid><description>FastAPI权限管理系统通过RBAC（基于角色的访问控制）实现用户与权限的解耦，核心要素包括用户、角色、权限和访问策略。系统使用OAuth2PasswordBearer进行认证，并通过依赖项工厂函数实现权限检查。权限依赖项支持多层级组合，允许组合多个权限检查或创建组合验证函数。常见报错包括HTTP 403 Forbidden和HTTP 401 Unauthorized，建议通过中间件和单元测试进行预防和验证。开发环境配置简单，使用FastAPI、Pydantic和Uvicorn即可快速搭建系统。</description></item><item><title>数据库安全实战：访问控制与行级权限管理</title><link>https://blog.cmdragon.cn/posts/a49721363d1cea8f5fac980120f52242/</link><pubDate>Sun, 16 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/a49721363d1cea8f5fac980120f52242/</guid><description>在数据泄露事件频发的今天，数据库访问控制是保护企业核心资产的最后一道防线。数据库安全体系的三大核心组件——用户角色管理、权限授权机制和行列级安全控制，通过PostgreSQL行级安全策略、Oracle VPD实战、MySQL加密列等20+生产级案例，揭示如何构建细粒度访问控制体系。</description></item><item><title>数据库安全性与权限管理</title><link>https://blog.cmdragon.cn/posts/9daf904b8e68a5369319cabb062f3af7/</link><pubDate>Mon, 16 Dec 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9daf904b8e68a5369319cabb062f3af7/</guid><description>数据库安全性与权限管理是保护数据不被未授权访问和操控的关键所在。通过实施有效的安全措施和细粒度的权限控制，可以确保数据库的完整性、机密性和可用性。</description></item></channel></rss>