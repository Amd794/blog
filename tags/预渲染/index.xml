<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>预渲染 on cmdragon's Blog</title><link>/tags/%E9%A2%84%E6%B8%B2%E6%9F%93/</link><description>Recent content in 预渲染 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 06 Nov 2024 00:18:53 +0800</lastBuildDate><atom:link href="/tags/%E9%A2%84%E6%B8%B2%E6%9F%93/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 prerender：routes 事件钩子详解</title><link>/posts/7a11deaf9e3d140fd18d7ad3cde4b9d7/</link><pubDate>Wed, 06 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/7a11deaf9e3d140fd18d7ad3cde4b9d7/</guid><description>prerender:routes 是 Nuxt.js 中的一个钩子，允许开发者在预渲染过程中扩展要预渲染的路由列表。这对于静态站点生成（SSG）尤为重要，开发者可以根据需求添加额外的动态路由或者其他需要预渲染的页面。</description></item><item><title>Nuxt Kit中的 Nitro 处理程序</title><link>/posts/57817ab039f0919c6af2a70557e03cee/</link><pubDate>Sat, 21 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/57817ab039f0919c6af2a70557e03cee/</guid><description>摘要：本文详细介绍了在Nuxt 3框架中使用Nitro服务器引擎的实践，包括创建处理程序处理HTTP请求、路由和中间件的基本概念。通过示例展示了如何创建服务器和开发处理程序，运用addServerHandler和addDevServerHandler方法，以及如何使用useNitro获取Nitro实例和添加自定义插件以扩展功能。</description></item><item><title>使用 nuxi generate 进行预渲染和部署</title><link>/posts/82f081b254205e6c18a5d415f97f2519/</link><pubDate>Wed, 04 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/82f081b254205e6c18a5d415f97f2519/</guid><description>通过 nuxi generate 命令，你可以轻松地将 Nuxt 应用程序预渲染为静态 HTML 文件，并将其部署到任何静态托管服务。这种方法可以提高应用程序的性能和安全性，特别适用于那些需要快速加载的应用。</description></item><item><title>使用 nuxi build 命令构建你的 Nuxt 应用程序</title><link>/posts/bc2bfb4e25c5fe348c22bcd59db71579/</link><pubDate>Fri, 30 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/bc2bfb4e25c5fe348c22bcd59db71579/</guid><description>nuxi build 命令是构建 Nuxt 应用程序的核心工具，它将你的应用程序打包成适合生产环境的格式。通过理解和使用不同的选项，如 &amp;ndash;prerender、&amp;ndash;dotenv 和 &amp;ndash;log-level，你可以更好地控制构建过程，并为生产环境做好充分准备。</description></item><item><title>使用 prerenderRoutes 进行预渲染路由</title><link>/posts/87586efe60054fbbb53f151d9025f356/</link><pubDate>Tue, 20 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/87586efe60054fbbb53f151d9025f356/</guid><description>prerenderRoutes 函数是 Nuxt 3 中一个强大的工具，它能够帮助开发者优化页面加载速度和改善用户体验。通过使用 prerenderRoutes，你能够灵活地指定需要预渲染的路由，提升网站性能和 SEO 效果。</description></item><item><title>使用 Nuxt 3 的 defineRouteRules 进行页面级别的混合渲染</title><link>/posts/a067b4aecdd04032860d7102ebcef604/</link><pubDate>Mon, 12 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/a067b4aecdd04032860d7102ebcef604/</guid><description>摘要：本文介绍了Nuxt 3中的defineRouteRules功能，用于实现页面级别的混合渲染配置。通过启用实验性选项inlineRouteRules，开发者能够在nuxt.config.ts中定义页面的预渲染行为。</description></item><item><title>Nuxt3 的生命周期和钩子函数（七）</title><link>/posts/a65c336a08214aa264f38f893fd9fe64/</link><pubDate>Mon, 01 Jul 2024 00:18:53 +0800</pubDate><guid>/posts/a65c336a08214aa264f38f893fd9fe64/</guid><description>摘要：文章阐述了Nuxt3中Nitro生命周期钩子的使用，如nitro:config自定义配置、nitro:init注册构建钩子、nitro:build:before/after调整构建设置及处理公共资产、prerender:routes扩展预渲染路由、build:error捕获构建错误，通过示例代码指导开发者优化项目构建与部署流程。</description></item></channel></rss>