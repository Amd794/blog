<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>实例复用 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%AE%9E%E4%BE%8B%E5%A4%8D%E7%94%A8/</link><description>Recent content in 实例复用 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 06 Apr 2025 01:22:25 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%AE%9E%E4%BE%8B%E5%A4%8D%E7%94%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI依赖注入实践：工厂模式与实例复用的优化策略</title><link>https://blog.cmdragon.cn/posts/a7c81698b93b9fa1034ac8c246a62d50/</link><pubDate>Sun, 06 Apr 2025 01:22:25 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/a7c81698b93b9fa1034ac8c246a62d50/</guid><description>FastAPI依赖注入系统中，类依赖的默认行为是为每个请求创建新实例，可能导致性能问题。通过工厂模式控制实例创建过程，可解耦配置和服务实例化，支持依赖层级嵌套，符合单一职责原则。使用lru_cache实现带缓存的工厂模式，优化高频调用场景性能。单例模式实现真正的单例依赖，请求级别复用策略在请求处理周期内复用实例。实际应用场景包括配置中心集成和多租户系统，动态配置加载和租户感知的依赖注入。常见报错解决方案涉及422 Validation Error和依赖项初始化失败。</description></item></channel></rss>