<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>团队协作 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</link>
    <description>Recent content in 团队协作 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 May 2025 00:13:50 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据库迁移的艺术：团队协作中的冲突预防与解决之道</title>
      <link>https://blog.cmdragon.cn/posts/dbaf19c1f2ca3b01929b292e7d0f506d/</link>
      <pubDate>Sat, 17 May 2025 00:13:50 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/dbaf19c1f2ca3b01929b292e7d0f506d/</guid>
      <description>在团队协作中，数据库迁移脚本冲突是常见问题。通过Alembic工具，可以有效地管理和解决这些冲突。冲突预防的四原则包括功能分支隔离、原子化迁移脚本、版本锁机制和自动化检测。当冲突发生时，使用&lt;code&gt;alembic merge&lt;/code&gt;命令合并分叉版本，生成新的迁移脚本。合并后需进行结构校验、空跑测试和回滚测试，确保迁移的正确性。常见报错如表已存在错误，可通过检查迁移顺序、添加反向操作和使用&lt;code&gt;alembic stamp&lt;/code&gt;命令解决。通过规范管理，团队可以平滑协作，实现数据库变更的有序推进。</description>
    </item>
    <item>
      <title>Vue 3与ESLint、Prettier：构建规范化的前端开发环境</title>
      <link>https://blog.cmdragon.cn/posts/4b2411a2957afd41b70bb48b0668275d/</link>
      <pubDate>Tue, 11 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/4b2411a2957afd41b70bb48b0668275d/</guid>
      <description>这篇文章介绍了如何在Vue 3项目中配置ESLint和Prettier以统一代码风格，实现代码规范性与可读性的提升。通过设置规则、解决冲突、以及将配置融入持续集成流程和代码审查过程，确保团队协作时代码风格的一致性，提升开发效率与项目维护性。</description>
    </item>
  </channel>
</rss>
