<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据分析 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link><description>Recent content in 数据分析 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 20 May 2025 20:24:47 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>解锁FastAPI与MongoDB聚合管道的性能奥秘</title><link>https://blog.cmdragon.cn/posts/4758340c2a266ca0e12a35ca53dd0d19/</link><pubDate>Tue, 20 May 2025 20:24:47 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/4758340c2a266ca0e12a35ca53dd0d19/</guid><description>MongoDB聚合管道是一种分阶段处理数据的流水线，通过$match、$group等阶段对文档进行特定操作，具有内存优化和原生操作的优势。聚合查询常用阶段包括$match、$group、$project等，适用于订单分析等场景。优化策略包括遵循ESR原则创建索引、使用$facet实现高效分页。常见错误如内存限制和游标配置问题，可通过添加&lt;code>allowDiskUse=True&lt;/code>和正确处理游标解决。进阶技巧包括使用$expr实现复杂逻辑、日期处理和条件投影。</description></item><item><title>Python 与 PostgreSQL 集成：深入 psycopg2 的应用与实践</title><link>https://blog.cmdragon.cn/posts/d8496eacd21bf9342264e22050b82cb3/</link><pubDate>Tue, 04 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d8496eacd21bf9342264e22050b82cb3/</guid><description>PostgreSQL 作为开源关系型数据库的佼佼者，因其强大的功能与性能被广泛应用于各种项目中。而 Python 则因其简洁易用的语法、丰富的库和强大的数据处理能力，成为数据科学与Web开发领域的重要语言。在这两者的结合中，psycopg2 作为 PostgreSQL 数据库与 Python 之间的桥梁，实现了高效的数据交互。</description></item><item><title>应用中的 PostgreSQL项目案例</title><link>https://blog.cmdragon.cn/posts/415ac1ac3cb9593b00d398c26b40c768/</link><pubDate>Mon, 03 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/415ac1ac3cb9593b00d398c26b40c768/</guid><description>随着大数据和云计算的兴起，企业在数据管理和数据分析方面面临着越来越复杂的挑战。PostgreSQL 作为一个开源关系型数据库，凭借其卓越的扩展性和强大的功能，逐渐成为众多企业在项目中的首选数据库</description></item><item><title>深度剖析 GROUP BY 和 HAVING 子句：优化 SQL 查询的利器</title><link>https://blog.cmdragon.cn/posts/45ed09822a8220aa480f67c0e3225a7e/</link><pubDate>Tue, 14 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/45ed09822a8220aa480f67c0e3225a7e/</guid><description>在数据处理和分析的过程中，需要对收集到的信息进行整理和汇总，从而为决策提供依据。在 SQL 语言中，GROUP BY 和 HAVING 子句是用于分组和过滤数据的重要工具。它们使得用户能够对数据进行高效的聚合和分析，尤其是进行复杂的统计计算和报告生成时格外有用。</description></item><item><title>深入探讨聚合函数（COUNT, SUM, AVG, MAX, MIN）：分析和总结数据的新视野</title><link>https://blog.cmdragon.cn/posts/27d8b24508379d4e5d4ae97873aa9397/</link><pubDate>Mon, 13 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/27d8b24508379d4e5d4ae97873aa9397/</guid><description>在数据分析和数据库管理领域，聚合函数（Aggregate Functions）是获取数据总结和统计信息的关键工具。聚合函数如 COUNT、SUM、AVG、MAX 和 MIN 能够有效地分析大量数据，帮助用户从中提取有价值的信息。</description></item><item><title>深入解析子查询（SUBQUERY）：增强 SQL 查询灵活性的强大工具</title><link>https://blog.cmdragon.cn/posts/3fb3175a31a273d40bef042297f877ad/</link><pubDate>Sun, 12 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/3fb3175a31a273d40bef042297f877ad/</guid><description>子查询（SUBQUERY）是一种在 SQL 查询中嵌套使用另一个 SELECT 查询的技术，它允许开发者在执行主查询的过程中动态地引入、过滤和操控数据。子查询具有提高查询灵活性、简化复杂逻辑和提升可读性的优势。</description></item><item><title>探索自联接（SELF JOIN）：揭示数据间复杂关系的强大工具</title><link>https://blog.cmdragon.cn/posts/f152dfcce73ed63594e329a1fb42c278/</link><pubDate>Sat, 11 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f152dfcce73ed63594e329a1fb42c278/</guid><description>自联接（SELF JOIN）是一种特殊的联接操作，在同一表中多次引用自己，从而允许开发者获取更复杂的数据关系。通过自联接，可以有效处理层级、映射和关联数据的查找，极大丰富了 SQL 查询的灵活性和表达能力。</description></item></channel></rss>