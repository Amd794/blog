<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>部署 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E9%83%A8%E7%BD%B2/</link><description>Recent content in 部署 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 21 Oct 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 build：done 事件钩子详解</title><link>https://blog.cmdragon.cn/posts/7b79085749b7f156ed36cf16fca42310/</link><pubDate>Mon, 21 Oct 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/7b79085749b7f156ed36cf16fca42310/</guid><description>build:done 是 Nuxt.js 的一个生命周期钩子，它在 Nuxt 应用的打包构建器完成运行后被调用。这个钩子为开发者提供了一个在构建过程结束后执行特定逻辑的机会，可以用于处理构建完成后的操作，如清理、通知、发布等。</description></item><item><title>使用 nuxi generate 进行预渲染和部署</title><link>https://blog.cmdragon.cn/posts/82f081b254205e6c18a5d415f97f2519/</link><pubDate>Wed, 04 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/82f081b254205e6c18a5d415f97f2519/</guid><description>通过 nuxi generate 命令，你可以轻松地将 Nuxt 应用程序预渲染为静态 HTML 文件，并将其部署到任何静态托管服务。这种方法可以提高应用程序的性能和安全性，特别适用于那些需要快速加载的应用。</description></item><item><title>使用 nuxi build 命令构建你的 Nuxt 应用程序</title><link>https://blog.cmdragon.cn/posts/bc2bfb4e25c5fe348c22bcd59db71579/</link><pubDate>Fri, 30 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bc2bfb4e25c5fe348c22bcd59db71579/</guid><description>nuxi build 命令是构建 Nuxt 应用程序的核心工具，它将你的应用程序打包成适合生产环境的格式。通过理解和使用不同的选项，如 &amp;ndash;prerender、&amp;ndash;dotenv 和 &amp;ndash;log-level，你可以更好地控制构建过程，并为生产环境做好充分准备。</description></item><item><title>深入Django项目实战与最佳实践</title><link>https://blog.cmdragon.cn/posts/bd5faca957b56442891a719976bb1866/</link><pubDate>Sun, 19 May 2024 21:41:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bd5faca957b56442891a719976bb1866/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_19 21_55_37.png@blog" title="2024_05_19 21_55_37.png" alt="2024_05_19 21_55_37.png"/>
&lt;h2 id="第一章django项目架构与设计原则">第一章：Django项目架构与设计原则&lt;/h2>
&lt;h3 id="django框架概述">Django框架概述&lt;/h3>
&lt;p>Django是一个高级的Python Web框架，它鼓励快速开发和干净、实用的设计。由于其“包含电池”的特性，Django提供了许多构建现代Web应用程序所需的工具和功能，从而减少了开发者需要从头开始编写的代码量。&lt;/p></description></item><item><title>Django测试与持续集成：从入门到精通</title><link>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</link><pubDate>Sat, 18 May 2024 16:38:41 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_18 16_43_35.png@blog" title="2024_05_18 16_43_35.png" alt="2024_05_18 16_43_35.png"/>
&lt;h2 id="第1章django测试基础">第1章：Django测试基础&lt;/h2>
&lt;h3 id="11-django测试框架概述">1.1 Django测试框架概述&lt;/h3>
&lt;p>Django测试框架是Django web
框架的一部分，提供了一个强大的工具集，帮助开发人员编写、运行和维护测试用例。Django测试框架基于Python的unittest模块，并扩展了许多有用的特性，例如数据库支持、测试客户端、模型和视图测试等。AD：&lt;a href="https://cmdragon.cn/">首页 | 一个覆盖广泛主题工具的高效在线平台&lt;/a>&lt;/p></description></item></channel></rss>