<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Django/</link><description>Recent content in Django on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 30 May 2024 09:01:33 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Django/index.xml" rel="self" type="application/rss+xml"/><item><title>Django集成elasticsearch</title><link>https://blog.cmdragon.cn/posts/0a47f405d0a04677bb894315ff0f4c83/</link><pubDate>Thu, 30 May 2024 09:01:33 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0a47f405d0a04677bb894315ff0f4c83/</guid><description>&lt;p>在Django项目中集成Elasticsearch通常涉及以下几个步骤：&lt;/p>
&lt;h3 id="1-安装elasticsearch">1. &lt;strong>安装Elasticsearch&lt;/strong>：&lt;/h3>
&lt;p>首先，你需要在你的服务器或本地机器上安装Elasticsearch。可以从&lt;a href="https://www.elastic.co/downloads/elasticsearch">Elasticsearch官网&lt;/a>
下载并安装。&lt;/p></description></item><item><title>Django与微服务架构：构建可扩展的Web应用</title><link>https://blog.cmdragon.cn/posts/61b57747a82113c01f83b72ade53c352/</link><pubDate>Tue, 21 May 2024 20:15:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/61b57747a82113c01f83b72ade53c352/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_21 20_18_51.png@blog" title="2024_05_21 20_18_51.png" alt="2024_05_21 20_18_51.png"/>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在当今快速发展的软件开发领域，微服务架构已经成为构建可扩展、灵活且易于维护的系统的热门选择。微服务架构通过将大型应用程序分解为一组小型、独立的服务来工作，每个服务都围绕特定的业务功能构建，并可以独立开发、部署和扩展。这种架构模式的优势在于提高了系统的灵活性和可维护性，同时允许团队以更快的速度迭代和部署新功能。&lt;/p></description></item><item><title>Django测试与持续集成：从入门到精通</title><link>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</link><pubDate>Sat, 18 May 2024 16:38:41 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_18 16_43_35.png@blog" title="2024_05_18 16_43_35.png" alt="2024_05_18 16_43_35.png"/>
&lt;h2 id="第1章django测试基础">第1章：Django测试基础&lt;/h2>
&lt;h3 id="11-django测试框架概述">1.1 Django测试框架概述&lt;/h3>
&lt;p>Django测试框架是Django web
框架的一部分，提供了一个强大的工具集，帮助开发人员编写、运行和维护测试用例。Django测试框架基于Python的unittest模块，并扩展了许多有用的特性，例如数据库支持、测试客户端、模型和视图测试等。AD：&lt;a href="https://cmdragon.cn/">首页 | 一个覆盖广泛主题工具的高效在线平台&lt;/a>&lt;/p></description></item><item><title>Django 自定义管理命令：从入门到高级</title><link>https://blog.cmdragon.cn/posts/a8afecb00bd2b7776e7c3d79738685cd/</link><pubDate>Thu, 16 May 2024 18:34:29 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/a8afecb00bd2b7776e7c3d79738685cd/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_16 18_43_11.png@blog" title="2024_05_16 18_43_11.png" alt="2024_05_16 18_43_11.png"/>
&lt;h2 id="第-1-章-简介">&lt;strong>第 1 章 简介&lt;/strong>&lt;/h2>
&lt;h3 id="11django-管理命令简介">1.1 &lt;strong>Django 管理命令简介&lt;/strong>&lt;/h3>
&lt;p>Django 是一个流行的 Python 网络框架，提供了许多有用的工具和特性，帮助开发人员快速构建强大的 Web
应用程序。其中一项重要特性是管理命令，它允许您在命令行界面 (CLI) 中执行各种任务，如数据库迁移、数据库操作、缓存清理和其他系统管理任务。&lt;/p></description></item><item><title>Django信号与扩展：深入理解与实践</title><link>https://blog.cmdragon.cn/posts/13ce298742c5b544510b64df767a9f23/</link><pubDate>Wed, 15 May 2024 22:40:52 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/13ce298742c5b544510b64df767a9f23/</guid><description>&lt;h2 id="第一部分django信号基础">第一部分：Django信号基础&lt;/h2>
&lt;h3 id="django信号概述">Django信号概述&lt;/h3>
&lt;p>一. Django信号的定义与作用&lt;/p>
&lt;p>Django信号（Signal）是Django框架中的一种机制，用于在特定事件发生时进行通信。信号可以让不同的Django组件松耦合地通信，即使它们不直接相互依赖。这种松耦合的设计使得Django应用更加灵活、可扩展和可维护。&lt;/p></description></item><item><title>深入理解Django：中间件与信号处理的艺术</title><link>https://blog.cmdragon.cn/posts/2754fe06b895a4268f93c63424bd4c13/</link><pubDate>Thu, 09 May 2024 18:41:21 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/2754fe06b895a4268f93c63424bd4c13/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_09 18_45_49.png@blog" title="2024_05_09 18_45_49.png" alt="2024_05_09 18_45_49.png"/>
&lt;h2 id="引言">&lt;strong>引言&lt;/strong>&lt;/h2>
&lt;p>在当今的Web开发领域，Django以其强大的功能、简洁的代码结构和高度的可扩展性，已成为众多开发者的首选框架。Django不仅是一个内容管理系统，更是一个全面的框架，它提供了一套完整的解决方案，包括ORM、模板引擎、URL路由系统和强大的管理后台，使得开发者能够快速构建高质量的Web应用。&lt;/p></description></item><item><title>深入学习和理解Django视图层：处理请求与响应</title><link>https://blog.cmdragon.cn/posts/3476dd0354c04bdd0485e1bbe91ccb1b/</link><pubDate>Sat, 04 May 2024 17:47:55 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/3476dd0354c04bdd0485e1bbe91ccb1b/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_04 17_51_09.png@blog" title="2024_05_04 17_51_09.png" alt="2024_05_04 17_51_09.png"/>
## 第一章：Django框架概述
&lt;h3 id="11-什么是django">1.1 什么是Django？&lt;/h3>
&lt;p>Django是一个高级的Python Web框架，它鼓励快速开发和干净、实用的设计。它由Wall Street
Journal的程序员在2005年开发，用于他们的新闻网站。自那时起，Django已经成为全球范围内广泛使用的Web框架之一。&lt;/p></description></item><item><title>从零开始：Django项目的创建与配置指南</title><link>https://blog.cmdragon.cn/posts/2475bf07d05f2d1a78dd47bfe9a73bd2/</link><pubDate>Thu, 02 May 2024 18:29:33 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/2475bf07d05f2d1a78dd47bfe9a73bd2/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_02 18_33_49.png@blog" title="2024_05_02 18_33_49.png" alt="2024_05_02 18_33_49.png"/>
&lt;h2 id="django简介">&lt;strong>Django简介：&lt;/strong>&lt;/h2>
&lt;p>Django是一个开源的高级Python Web框架，由法国人Guido
Zempe于2003年创建。它以“快速开发、可维护的网站”为目标，提供了许多内置的功能，如ORM（对象关系映射）、URL路由、模板系统、管理后台等，让开发者能够专注于业务逻辑，而无需从头开始构建网站的底层结构。&lt;/p></description></item></channel></rss>