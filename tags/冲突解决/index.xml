<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>冲突解决 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3/</link>
    <description>Recent content in 冲突解决 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 May 2025 00:13:50 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据库迁移的艺术：团队协作中的冲突预防与解决之道</title>
      <link>https://blog.cmdragon.cn/posts/dbaf19c1f2ca3b01929b292e7d0f506d/</link>
      <pubDate>Sat, 17 May 2025 00:13:50 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/dbaf19c1f2ca3b01929b292e7d0f506d/</guid>
      <description>在团队协作中，数据库迁移脚本冲突是常见问题。通过Alembic工具，可以有效地管理和解决这些冲突。冲突预防的四原则包括功能分支隔离、原子化迁移脚本、版本锁机制和自动化检测。当冲突发生时，使用&lt;code&gt;alembic merge&lt;/code&gt;命令合并分叉版本，生成新的迁移脚本。合并后需进行结构校验、空跑测试和回滚测试，确保迁移的正确性。常见报错如表已存在错误，可通过检查迁移顺序、添加反向操作和使用&lt;code&gt;alembic stamp&lt;/code&gt;命令解决。通过规范管理，团队可以平滑协作，实现数据库变更的有序推进。</description>
    </item>
  </channel>
</rss>
