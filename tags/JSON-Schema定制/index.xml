<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JSON Schema定制 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/JSON-Schema%E5%AE%9A%E5%88%B6/</link><description>Recent content in JSON Schema定制 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 27 Mar 2025 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/JSON-Schema%E5%AE%9A%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>Pydantic Schema生成指南：自定义JSON Schema</title><link>https://blog.cmdragon.cn/posts/620198727c7909e8dea287430dcf67eb/</link><pubDate>Thu, 27 Mar 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/620198727c7909e8dea287430dcf67eb/</guid><description>Pydantic的Schema生成机制支持从基础定义到企业级应用的完整解决方案。默认流程包含字段定义、元数据收集、类型映射和Schema组装四个步骤。通过Field的json_schema_extra可注入字段级扩展元数据，继承GenerateJsonSchema实现类型映射重载。动态生成支持运行时模型构建和环境感知调整，企业级方案涵盖OpenAPI增强和版本化管理。性能优化推荐LRU缓存，错误处理需注意格式兼容性和必填字段验证。最佳实践包括契约优先、版本控制和自动化测试。</description></item></channel></rss>