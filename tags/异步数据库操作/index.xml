<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>异步数据库操作 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</link>
    <description>Recent content in 异步数据库操作 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 01 May 2025 00:12:39 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入解析Tortoise-ORM关系型字段与异步查询</title>
      <link>https://blog.cmdragon.cn/posts/fdc89b660c15388ee6ff3e27f85d94dc/</link>
      <pubDate>Thu, 01 May 2025 00:12:39 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/fdc89b660c15388ee6ff3e27f85d94dc/</guid>
      <description>Tortoise-ORM在FastAPI异步架构中处理模型关系时，与传统同步ORM有显著差异。通过&lt;code&gt;ForeignKeyField&lt;/code&gt;和&lt;code&gt;ManyToManyField&lt;/code&gt;定义关系，使用字符串形式的模型路径进行引用。异步查询必须通过&lt;code&gt;await&lt;/code&gt;调用，&lt;code&gt;prefetch_related&lt;/code&gt;实现关联数据的异步预加载。&lt;code&gt;in_transaction&lt;/code&gt;上下文管理器处理异步事务，&lt;code&gt;add()&lt;/code&gt;/&lt;code&gt;remove()&lt;/code&gt;方法维护多对多关系。性能测试显示异步ORM在单条插入、批量关联查询和多对多关系维护上均有显著提升。常见报错包括事务管理错误、连接关闭和模型引用路径错误，需正确使用事务管理和&lt;code&gt;await&lt;/code&gt;。</description>
    </item>
    <item>
      <title>FastAPI与Tortoise-ORM实现关系型数据库关联</title>
      <link>https://blog.cmdragon.cn/posts/75c1dff8b6b9960d1d47750094e29f2c/</link>
      <pubDate>Mon, 21 Apr 2025 10:51:41 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/75c1dff8b6b9960d1d47750094e29f2c/</guid>
      <description>FastAPI与Tortoise-ORM结合实现关系型数据库关联，支持1:1、1:N和M:N关系。1:N关系通过&lt;code&gt;ForeignKeyField&lt;/code&gt;定义，M:N关系使用&lt;code&gt;ManyToManyField&lt;/code&gt;处理。Pydantic模型用于数据验证和序列化，路由实现中通过&lt;code&gt;prefetch_related&lt;/code&gt;优化查询性能。M:N关系通过中间表操作，支持复杂查询。常见报错包括422验证错误和外键约束失败，可通过事务和类型检查解决。安装依赖后，使用uvicorn启动服务进行测试。</description>
    </item>
  </channel>
</rss>
