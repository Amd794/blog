<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据加密 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86/</link><description>Recent content in 数据加密 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 28 Jun 2025 08:37:03 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中打造坚不可摧的Web安全防线？</title><link>https://blog.cmdragon.cn/posts/9d6200ae7ce0a1a1a523591e3d65a82e/</link><pubDate>Sat, 28 Jun 2025 08:37:03 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9d6200ae7ce0a1a1a523591e3d65a82e/</guid><description>Web 安全三要素包括机密性、完整性和可用性。机密性通过加密算法保护数据传输和存储，FastAPI 默认支持 HTTPS。完整性通过哈希校验和数字签名确保数据未被篡改，FastAPI 使用 Pydantic 进行数据验证。可用性通过请求速率限制保障服务稳定，使用 Redis 实现分布式限流。HTTPS 通过 TLS 加密通信信道，证书配置可生成自签名证书。安全威胁防御包括 XSS 防护（HTML 转义）、CSRF 防护（令牌验证）和 SQL 注入防护（参数化查询）。</description></item><item><title>如何用 FastAPI 和 RBAC 打造坚不可摧的安全堡垒？</title><link>https://blog.cmdragon.cn/posts/d878b5dbef959058b8098551c70594f8/</link><pubDate>Fri, 27 Jun 2025 04:55:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d878b5dbef959058b8098551c70594f8/</guid><description>FastAPI 安全认证与 RBAC 系统原理基于角色的访问控制（RBAC）模型，包含用户、角色和权限三个核心要素。通过 JWT 令牌实现认证，动态权限依赖注入进行权限校验。数据模型使用 Pydantic 和 SQLAlchemy 构建，密码存储采用 bcrypt 加密，并引入请求速率限制防止暴力破解。单元测试和错误处理确保系统稳定性，JWT 令牌设置过期时间以降低泄露风险。</description></item><item><title>数据库安全性与权限管理</title><link>https://blog.cmdragon.cn/posts/9daf904b8e68a5369319cabb062f3af7/</link><pubDate>Mon, 16 Dec 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9daf904b8e68a5369319cabb062f3af7/</guid><description>数据库安全性与权限管理是保护数据不被未授权访问和操控的关键所在。通过实施有效的安全措施和细粒度的权限控制，可以确保数据库的完整性、机密性和可用性。</description></item></channel></rss>