<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACID特性 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/ACID%E7%89%B9%E6%80%A7/</link>
    <description>Recent content in ACID特性 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 23 Apr 2025 12:07:08 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/ACID%E7%89%B9%E6%80%A7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入解析事务基础与原子操作原理</title>
      <link>https://blog.cmdragon.cn/posts/6f4ae59a09bfa05596ed8632ca772076/</link>
      <pubDate>Wed, 23 Apr 2025 12:07:08 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6f4ae59a09bfa05596ed8632ca772076/</guid>
      <description>事务是数据库操作的核心，需满足ACID特性：原子性、一致性、隔离性和持久性。事务隔离级别包括读未提交、读已提交、可重复读和串行化，适用于不同场景。嵌套事务通过上下文管理实现，支持回滚点以部分回滚。实战案例展示了订单系统中的事务处理，包括余额检查和支付失败回滚。常见错误如TransactionManagementError和死锁，需通过正确使用事务装饰器和重试机制解决。课后Quiz探讨了事务隔离和嵌套事务回滚的处理方法。运行环境配置包括依赖安装和FastAPI启动设置。</description>
    </item>
    <item>
      <title>数据操作与事务：确保数据一致性的关键</title>
      <link>https://blog.cmdragon.cn/posts/aff107a909f04dc52a887b45e9bd2484/</link>
      <pubDate>Tue, 11 Feb 2025 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/aff107a909f04dc52a887b45e9bd2484/</guid>
      <description>在现代数据管理中，事务处理是确保数据完整性和一致性的重要机制。本文将深入探讨事务的ACID特性、锁机制及其种类（行级锁与表级锁）以及事务隔离级别（READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ、SERIALIZABLE）。</description>
    </item>
    <item>
      <title>事务管理与锁机制</title>
      <link>https://blog.cmdragon.cn/posts/6881aed7e5aa53915d50985da8f2fcda/</link>
      <pubDate>Sat, 14 Dec 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6881aed7e5aa53915d50985da8f2fcda/</guid>
      <description>在数据库系统中，事务管理至关重要，它确保多个数据库操作能够作为一个单一的逻辑单元来执行，从而维护数据的一致性和完整性。一个良好的事务管理系统能够解决并发操作带来的问题，如脏读、不可重复读和幻读。此外，通过使用锁机制，数据库可以控制对数据的并发访问，确保数据在被多个用户操作时的安全性和一致性。</description>
    </item>
  </channel>
</rss>
