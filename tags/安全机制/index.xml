<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安全机制 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</link>
    <description>Recent content in 安全机制 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Jun 2025 08:40:35 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FastAPI安全机制：从OAuth2到JWT的魔法通关秘籍</title>
      <link>https://blog.cmdragon.cn/posts/04b73a9a5712e6b51e8c45c35f331e59/</link>
      <pubDate>Sat, 07 Jun 2025 08:40:35 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/04b73a9a5712e6b51e8c45c35f331e59/</guid>
      <description>FastAPI 的安全机制基于 OAuth2 规范、JWT 和依赖注入系统三大核心组件，提供了标准化的授权框架和无状态的身份验证。OAuth2 密码流通过 &lt;code&gt;CryptContext&lt;/code&gt; 进行密码哈希处理，&lt;code&gt;OAuth2PasswordBearer&lt;/code&gt; 自动提取和验证 Bearer Token，JWT 令牌包含过期时间，确保服务端无需存储会话状态。依赖注入系统通过 &lt;code&gt;Depends()&lt;/code&gt; 实现身份验证逻辑的解耦。典型请求流程包括 Token 验证、JWT 解码和用户验证，确保请求的合法性。</description>
    </item>
    <item>
      <title>FastAPI中的Pydantic密码验证机制与实现</title>
      <link>https://blog.cmdragon.cn/posts/a72a86da313f399c29b36ec08f75361d/</link>
      <pubDate>Mon, 31 Mar 2025 00:04:51 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a72a86da313f399c29b36ec08f75361d/</guid>
      <description>FastAPI 中通过 Pydantic 模型实现密码验证，采用分层机制确保高效与灵活扩展。验证流程包括基础类型检查、长度验证、复杂度验证和泄露检测，任一阶段失败即终止后续验证。通过 &lt;code&gt;SecretStr&lt;/code&gt; 安全获取密码明文，结合正则表达式验证密码复杂度，并利用哈希函数检测密码是否泄露。模块化设计便于后续添加更多安全规则，如密码过期策略和历史密码比对。</description>
    </item>
  </channel>
</rss>
