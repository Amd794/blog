<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP状态码 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/</link><description>Recent content in HTTP状态码 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 05 Jun 2025 21:06:31 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI安全异常处理：从401到422的奇妙冒险</title><link>https://blog.cmdragon.cn/posts/92a7a3de40eb9ce71620716632f68676/</link><pubDate>Thu, 05 Jun 2025 21:06:31 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/92a7a3de40eb9ce71620716632f68676/</guid><description>FastAPI安全异常处理核心原理与实践包括认证失败的标准HTTP响应规范、令牌异常的特殊场景处理以及完整示例代码。HTTP状态码选择原则建议使用401、403和422，错误响应结构应统一。JWT令牌异常分为签名篡改、过期和格式错误，推荐状态码为401。通过依赖注入实现令牌校验，并采用双令牌策略实现令牌刷新机制。完整示例代码展示了如何创建和验证JWT令牌，以及如何保护路由。</description></item></channel></rss>