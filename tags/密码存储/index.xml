<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>密码存储 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%AF%86%E7%A0%81%E5%AD%98%E5%82%A8/</link>
    <description>Recent content in 密码存储 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 09 Jun 2025 16:40:19 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%AF%86%E7%A0%81%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>你的密码存储方式是否在向黑客招手？</title>
      <link>https://blog.cmdragon.cn/posts/5f8821250c5a4e9cc08bd08faef76c77/</link>
      <pubDate>Mon, 09 Jun 2025 16:40:19 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/5f8821250c5a4e9cc08bd08faef76c77/</guid>
      <description>现代Web应用中，密码安全的核心在于验证用户身份的同时不存储原始密码。早期方案如明文存储、简单加密和弱哈希算法（如MD5）存在重大风险，易被破解。现代密码哈希技术通过增加计算耗时、使用随机盐值和抗GPU算法（如bcrypt、scrypt、Argon2）来增强安全性。Bcrypt实现方案包括生成唯一盐值和哈希密码，验证时通过对比哈希值确认密码正确性。安全增强策略包括密码复杂度验证和登录频率限制。常见问题如密码验证不一致和版本兼容性错误，需通过URL编码和指定版本解决。测试方案确保密码哈希的唯一性和正确性。</description>
    </item>
  </channel>
</rss>
