<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>报错解决方案 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
    <description>Recent content in 报错解决方案 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 03 Jun 2025 23:14:07 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JWT令牌：从身份证到代码防伪的奇妙之旅</title>
      <link>https://blog.cmdragon.cn/posts/a39277914464b007ac61874292578de0/</link>
      <pubDate>Tue, 03 Jun 2025 23:14:07 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a39277914464b007ac61874292578de0/</guid>
      <description>JWT（JSON Web Token）是一种用于安全传输信息的开放标准，由Header、Payload和Signature三部分组成。Header描述算法和令牌类型，Payload存放实际数据，Signature通过密钥和算法生成，确保数据未被篡改。PyJWT库可用于生成和验证JWT令牌，FastAPI框架中可通过OAuth2PasswordBearer实现身份验证。常见问题包括签名验证失败和令牌过期，需确保密钥一致并定期轮换。JWT适用于身份认证和信息交换，但需避免在Payload中存储敏感数据。</description>
    </item>
  </channel>
</rss>
