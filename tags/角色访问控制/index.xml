<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>角色访问控制 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E8%A7%92%E8%89%B2%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><description>Recent content in 角色访问控制 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 13 Jun 2025 05:46:55 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E8%A7%92%E8%89%B2%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI如何用角色权限让Web应用安全又灵活？</title><link>https://blog.cmdragon.cn/posts/cc7aa0af577ae2bc0694e76886373e12/</link><pubDate>Fri, 13 Jun 2025 05:46:55 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/cc7aa0af577ae2bc0694e76886373e12/</guid><description>基于角色的路由访问控制是Web应用中常见的安全控制模式，通过为用户分配特定角色来管理权限。FastAPI利用依赖注入系统实现权限控制，具有解耦、模块化、兼容OpenAPI等优势。权限验证流程包括请求拦截、角色解析和权限校验三个阶段。通过定义数据模型和核心权限验证模块，可以实现企业级权限控制方案。常见报错如422、401、403等，可通过调试和错误处理机制解决。动态权限管理建议使用RBAC数据库结构，多角色用户可通过中间表实现。</description></item></channel></rss>