<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>最佳实践 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><description>Recent content in 最佳实践 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 20 Jun 2025 11:33:15 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中打造坚不可摧的安全防线？</title><link>https://blog.cmdragon.cn/posts/c74023c89591cfdffe2f392c8f3fac7a/</link><pubDate>Fri, 20 Jun 2025 11:33:15 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c74023c89591cfdffe2f392c8f3fac7a/</guid><description>FastAPI的中间件机制允许对HTTP请求和响应进行拦截处理，适用于身份认证、日志记录、流量控制等场景。通过注册中间件，可以实现IP黑名单拦截、敏感词过滤等功能。集成JWT认证和角色权限验证，确保API的安全性。常见错误如422、401、500等可通过全局异常处理器进行统一处理。最佳实践包括启用HTTPS、使用环境变量管理敏感配置、定期更新依赖库等，以构建企业级安全的API服务。</description></item><item><title>数据库事务隔离与Alembic数据恢复的实战艺术</title><link>https://blog.cmdragon.cn/posts/cf1e62c5d062081d6bb96f82c2f9f2da/</link><pubDate>Thu, 15 May 2025 00:05:13 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/cf1e62c5d062081d6bb96f82c2f9f2da/</guid><description>事务隔离级别是数据库管理系统中防止数据不一致的重要机制，包括读未提交、读已提交、可重复读和串行化四个级别。Alembic提供了版本分支管理和数据版本回滚等高级操作技巧，帮助团队协作和解决迁移冲突。在实战中，金融交易场景通常使用串行化隔离级别以确保数据一致性，而电商订单恢复系统则通过事务和Alembic回滚实现安全恢复。最佳实践建议包括使用适当的隔离级别、显式加锁、定期备份和审核回滚脚本，以在数据安全性和系统性能之间找到平衡。</description></item><item><title>FastAPI依赖注入：链式调用与多级参数传递</title><link>https://blog.cmdragon.cn/posts/7c1206bbcb7a5ae74ef57b3d22fae599/</link><pubDate>Sat, 05 Apr 2025 18:43:12 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/7c1206bbcb7a5ae74ef57b3d22fae599/</guid><description>FastAPI的依赖注入系统通过链式调用和多级参数传递实现组件间的解耦和复用。核心特性包括解耦性、可复用性、可测试性和声明式依赖解析。链式依赖通过多级函数调用传递参数，如电商订单处理流程中的用户认证、VIP校验和库存检查。多级参数传递模式包括垂直传递、水平聚合和动态参数传递。常见错误如422验证错误和循环引用，可通过参数验证和依赖重构解决。最佳实践包括依赖分层、参数验证、性能优化和异步支持。</description></item><item><title>Node.js 与 PostgreSQL 集成：深入 pg 模块的应用与实践</title><link>https://blog.cmdragon.cn/posts/4798cc064cc3585a3819636b3c23271b/</link><pubDate>Wed, 05 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/4798cc064cc3585a3819636b3c23271b/</guid><description>随着 JavaScript 在服务器端编程中的兴起，Node.js 已成为构建高性能网络应用程序的重要平台。PostgreSQL 则以其强大的特性以及对复杂数据结构的支持，被广泛用作数据库解决方案。在 Node.js 中，pg 模块是实现与 PostgreSQL 连接的主要工具，提供了灵活而高效的数据库操作方式。</description></item><item><title>Python 与 PostgreSQL 集成：深入 psycopg2 的应用与实践</title><link>https://blog.cmdragon.cn/posts/d8496eacd21bf9342264e22050b82cb3/</link><pubDate>Tue, 04 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d8496eacd21bf9342264e22050b82cb3/</guid><description>PostgreSQL 作为开源关系型数据库的佼佼者，因其强大的功能与性能被广泛应用于各种项目中。而 Python 则因其简洁易用的语法、丰富的库和强大的数据处理能力，成为数据科学与Web开发领域的重要语言。在这两者的结合中，psycopg2 作为 PostgreSQL 数据库与 Python 之间的桥梁，实现了高效的数据交互。</description></item><item><title>应用中的 PostgreSQL项目案例</title><link>https://blog.cmdragon.cn/posts/415ac1ac3cb9593b00d398c26b40c768/</link><pubDate>Mon, 03 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/415ac1ac3cb9593b00d398c26b40c768/</guid><description>随着大数据和云计算的兴起，企业在数据管理和数据分析方面面临着越来越复杂的挑战。PostgreSQL 作为一个开源关系型数据库，凭借其卓越的扩展性和强大的功能，逐渐成为众多企业在项目中的首选数据库</description></item><item><title>数据库的创建与删除：理论与实践</title><link>https://blog.cmdragon.cn/posts/132240091f6cc8e075b36058968d0470/</link><pubDate>Tue, 31 Dec 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/132240091f6cc8e075b36058968d0470/</guid><description>在当今的数字时代，数据的管理和存储变得尤为重要。数据库作为数据存储的结构化方案，为数据的增删改查提供了系统化的方法。在一个典型的数据库管理系统中，创建和删除数据库是常见且基本的操作。尽管简单，但这些操作却具有重要的安全性、性能及设计意义。</description></item><item><title>Nuxt Kit 中的插件：创建与使用</title><link>https://blog.cmdragon.cn/posts/cb753641cae33519dd339d523c5afa32/</link><pubDate>Thu, 19 Sep 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/cb753641cae33519dd339d523c5afa32/</guid><description>摘要：本文介绍了在 Nuxt 3 框架中使用 Nuxt Kit 创建和管理插件的方法，包括使用addPlugin注册插件、创建插件文件、在Vue组件中使用插件，以及使用addPluginTemplate创建插件模板和动态生成插件代码。</description></item><item><title>Vue 3指令与事件处理</title><link>https://blog.cmdragon.cn/posts/2e7a14bf286c46abeb20814663eabf8f/</link><pubDate>Sat, 25 May 2024 18:53:37 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/2e7a14bf286c46abeb20814663eabf8f/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_25 19_04_01.png@blog" title="2024_05_25 19_04_01.png" alt="2024_05_25 19_04_01.png"/>
&lt;h2 id="第1章-vue-3基础">&lt;strong>第1章 Vue 3基础&lt;/strong>&lt;/h2>
&lt;p>&lt;strong>1.1 Vue 3简介&lt;/strong>&lt;/p>
&lt;p>Vue 3 是一个由尤雨溪（尤大）领导的开源JavaScript框架，它专注于构建用户界面。相较于Vue 2，Vue 3在核心理念上保持一致，但对一些底层实现进行了重大优化，包括：&lt;/p></description></item><item><title>深入Django项目实战与最佳实践</title><link>https://blog.cmdragon.cn/posts/bd5faca957b56442891a719976bb1866/</link><pubDate>Sun, 19 May 2024 21:41:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bd5faca957b56442891a719976bb1866/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_19 21_55_37.png@blog" title="2024_05_19 21_55_37.png" alt="2024_05_19 21_55_37.png"/>
&lt;h2 id="第一章django项目架构与设计原则">第一章：Django项目架构与设计原则&lt;/h2>
&lt;h3 id="django框架概述">Django框架概述&lt;/h3>
&lt;p>Django是一个高级的Python Web框架，它鼓励快速开发和干净、实用的设计。由于其“包含电池”的特性，Django提供了许多构建现代Web应用程序所需的工具和功能，从而减少了开发者需要从头开始编写的代码量。&lt;/p></description></item><item><title>Django高级表单处理与验证实战</title><link>https://blog.cmdragon.cn/posts/d16b468457895cfcfb0397217cb62acd/</link><pubDate>Mon, 06 May 2024 20:47:15 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d16b468457895cfcfb0397217cb62acd/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_06 20_52_18.png@blog" title="2024_05_06 20_52_18.png" alt="2024_05_06 20_52_18.png"/>
&lt;h2 id="引言">引言：&lt;/h2>
&lt;p>在Web应用开发中，表单是用户与应用之间进行交互的重要方式，它承载着用户输入的数据，是用户与应用之间信息传递的桥梁。Django作为一个强大的Web框架，提供了丰富而灵活的表单处理功能，使得开发者能够轻松地创建、验证和处理表单数据。&lt;/p></description></item></channel></rss>