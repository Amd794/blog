<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python实现 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Python%E5%AE%9E%E7%8E%B0/</link><description>Recent content in Python实现 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 07 May 2025 00:12:40 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Python%E5%AE%9E%E7%8E%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>点赞背后的技术大冒险：分布式事务与SAGA模式</title><link>https://blog.cmdragon.cn/posts/e586c7819314ad2cb97f35676d143adc/</link><pubDate>Wed, 07 May 2025 00:12:40 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e586c7819314ad2cb97f35676d143adc/</guid><description>在微服务架构中，点赞操作涉及多个服务的数据更新，传统数据库事务在分布式系统中失效，需采用SAGA事务模式。SAGA将事务分解为多个本地事务，通过补偿机制保证最终一致性。每个操作需定义对应的补偿操作，补偿操作需幂等，并记录事务状态和实现超时机制。代码实现包括基础模型定义、事务上下文管理器和核心业务逻辑，测试验证正常和异常流程。生产环境中建议添加事务日志、实现定时补偿任务和服务降级策略。</description></item><item><title>声控小助手：文本语音呼唤技术的应用与实现</title><link>https://blog.cmdragon.cn/posts/c0f6d34ae90790b8f063faf0e2f63077/</link><pubDate>Fri, 22 Mar 2024 18:20:42 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c0f6d34ae90790b8f063faf0e2f63077/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_03_22 18_21_50.png@blog" title="2024_03_22 18_21_50.png" alt="2024_03_22 18_21_50.png"/>
&lt;h4 id="1-引言">1. 引言&lt;/h4>
&lt;p>在当今数字化时代，文本语音呼唤技术正逐渐成为人们生活中不可或缺的一部分。本文将介绍文本语音呼唤技术的原理、实现方法以及其在智能助手、智能家居等领域的应用。&lt;/p></description></item><item><title>UUID算法：独一无二的标识符解决方案</title><link>https://blog.cmdragon.cn/posts/0cef7779d9197025b201b98099a23fe3/</link><pubDate>Sat, 10 Feb 2024 21:00:39 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0cef7779d9197025b201b98099a23fe3/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_02_10 21_02_30.png@blog" title="2024_02_10 21_02_30.png" alt="2024_02_10 21_02_30.png"/>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>在分布式系统和大数据环境下，唯一标识符的生成和管理是一项关键任务。UUID（Universally Unique
Identifier）算法应运而生，成为了解决重复数据和标识符冲突的有效工具。本文将探讨UUID算法的优势和劣势，分析其在分布式系统、大数据环境以及其他领域中的应用，同时给出Python完整示例演示UUID的生成和使用。&lt;/p></description></item></channel></rss>