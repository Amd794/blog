<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>架构 on cmdragon's Blog</title><link>/tags/%E6%9E%B6%E6%9E%84/</link><description>Recent content in 架构 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 15 Jun 2024 00:18:53 +0800</lastBuildDate><atom:link href="/tags/%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue微前端架构与Qiankun实践理论指南</title><link>/posts/85413b9cd655f3440b957120c918e610/</link><pubDate>Sat, 15 Jun 2024 00:18:53 +0800</pubDate><guid>/posts/85413b9cd655f3440b957120c918e610/</guid><description>这篇文章介绍了微前端架构概念，聚焦于如何在Vue.js项目中应用Qiankun框架实现模块化和组件化，以达到高效开发和维护的目的。讨论了Qiankun的原理、如何设置主应用与子应用的通信，以及如何解决跨域问题和优化集成过程，从而实现前端应用的灵活扩展与组织。</description></item></channel></rss>