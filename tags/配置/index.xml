<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>配置 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E9%85%8D%E7%BD%AE/</link>
    <description>Recent content in 配置 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Nov 2024 00:18:53 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nuxt.js 应用中的 webpack：configResolved事件钩子</title>
      <link>https://blog.cmdragon.cn/posts/c9d5ec8a241258b72058270c7c4a22e5/</link>
      <pubDate>Thu, 21 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/c9d5ec8a241258b72058270c7c4a22e5/</guid>
      <description>在 Nuxt.js 项目中，webpack:configResolved 钩子允许开发者在 Webpack 配置被解析后读取和修改该配置。这一钩子在所有 Webpack 配置被合并和确定后调用，为开发者提供了更进一步自定义的机会。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 webpackConfigs 事件钩子</title>
      <link>https://blog.cmdragon.cn/posts/27df5b46451b376fa9dbeae0b579612f/</link>
      <pubDate>Wed, 20 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/27df5b46451b376fa9dbeae0b579612f/</guid>
      <description>在 Nuxt.js 项目中，webpack:config 钩子允许运行时对 Webpack 配置进行修改。此钩子在配置 Webpack 编译器之前被调用，使得开发者能根据需要定制和扩展 Webpack 的默认配置。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 vite：configResolved 事件钩子</title>
      <link>https://blog.cmdragon.cn/posts/2d9f94579481d38e0e9a7569cdfc31cb/</link>
      <pubDate>Sun, 17 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/2d9f94579481d38e0e9a7569cdfc31cb/</guid>
      <description>在 Nuxt 3 中，vite:configResolved 钩子允许开发者在 Vite 配置被解析后访问已解析的配置项。这使得在构建过程中能够根据最终的配置进行动态调整和扩展。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 vite：extendConfig 事件钩子</title>
      <link>https://blog.cmdragon.cn/posts/6bbb5474e945ea9d9a79c6cfcb6ec585/</link>
      <pubDate>Sat, 16 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6bbb5474e945ea9d9a79c6cfcb6ec585/</guid>
      <description>通过合理使用 vite:extendConfig 钩子，开发者可以极大地增强 Nuxt 3 项目的灵活性和功能性，为不同的项目需求量身定制 Vite 配置。无论是添加插件、调整构建选项还是配置开发服务器，这些扩展可以有效提升开发体验和应用性能。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 schema：written 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/bbc449caa5e31f1084aed152323c2758/</link>
      <pubDate>Fri, 15 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/bbc449caa5e31f1084aed152323c2758/</guid>
      <description>schema:written 钩子是 Vite 提供的一种生命周期钩子，在模式写入完成后调用。通过这个钩子，开发者可以在配置被正式应用之后执行一些后续操作，比如记录日志、初始化服务或调整系统状态。本文将深入探讨该钩子的用法及多种应用场景。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 schema：beforeWrite 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/9303f1529d95797ca3241f21e2fbc34d/</link>
      <pubDate>Thu, 14 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/9303f1529d95797ca3241f21e2fbc34d/</guid>
      <description>schema:beforeWrite 钩子是 Vite 提供的一个功能强大的生命周期钩子，允许开发者在 JSON Schema 被写入之前执行自定义操作。利用这个钩子，您可以对模式进行修改、添加验证逻辑或动态调整配置选项，从而提高应用的灵活性和定制化水平。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 schema：resolved 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/0a60978d2ce7bbcd5b86f9de0e5c99e2/</link>
      <pubDate>Wed, 13 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/0a60978d2ce7bbcd5b86f9de0e5c99e2/</guid>
      <description>schema:resolved 钩子允许开发者在 Vite 中扩展已解析的 JSON Schema。这使得开发者能够对 Vite 的配置进行更细粒度的控制和定制，从而更好地满足项目需求。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 vite：extendConfig 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</link>
      <pubDate>Tue, 12 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</guid>
      <description>vite:extendConfig 钩子允许开发者在 Vite 项目中扩展默认配置。这使得开发者可以根据特定需求自定义 Vite 的构建和开发行为，增强开发体验。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 prepare：types 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/68419c6dd94db64cbb46673ab19a5146/</link>
      <pubDate>Fri, 08 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/68419c6dd94db64cbb46673ab19a5146/</guid>
      <description>prepare:types 钩子为 Nuxt.js 开发者提供了灵活定制 TypeScript 配置和声明的能力。通过使用此钩子，开发者能够确保 TypeScript 配置和类型声明能够满足他们的项目需求，提升代码的可维护性和类型安全性。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 nitro：build：before 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/a2820600faa85b49967d91cb7617c284/</link>
      <pubDate>Mon, 04 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a2820600faa85b49967d91cb7617c284/</guid>
      <description>nitro:build:before 是 Nuxt 3 中的一个生命周期钩子，专门用于在构建 Nitro 实例之前调用。这个钩子允许开发者在 Nitro 实例构建之前执行特定的操作，从而对构建过程进行定制和优化。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 nitro：config 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/927aa434dc4886c8c357c9000e072b19/</link>
      <pubDate>Sat, 02 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/927aa434dc4886c8c357c9000e072b19/</guid>
      <description>nitro:config 是 Nuxt 3 中的一个生命周期钩子，允许开发者在初始化 Nitro 之前自定义 Nitro 的配置。Nitro 是 Nuxt 3 的服务器引擎，负责处理请求、渲染响应和处理其他后端逻辑。通过使用 nitro:config 钩子，开发者可以灵活地调整 Nitro 的行为，以满足特定的需求。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 imports：context 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/e94c7e1071e2541e95713c53eafd79ef/</link>
      <pubDate>Tue, 29 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/e94c7e1071e2541e95713c53eafd79ef/</guid>
      <description>imports:context 是 Nuxt.js 中的一个生命周期钩子，主要用于在创建 unimport 上下文时调用。这个钩子为开发者提供了对模块导入上下文的操作能力，方便进行动态编译和导入配置。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 imports：sources 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/cf392e5071f22b4179114cece7e0e8b1/</link>
      <pubDate>Sun, 27 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/cf392e5071f22b4179114cece7e0e8b1/</guid>
      <description>imports:sources 是 Nuxt.js 的一个生命周期钩子，用于在模块设置过程中执行。开发者可以利用这个钩子来扩展模块的源，方便地管理依赖和模块化配置。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 builder：generateApp 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/1191139984bd4df519af6d16a616949e/</link>
      <pubDate>Wed, 23 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/1191139984bd4df519af6d16a616949e/</guid>
      <description>builder:generateApp 是 Nuxt.js 的一个生命周期钩子，它在生成应用程序之前被调用。这个钩子为开发者提供了一个机会，可以在生成过程开始之前修改或配置生成的应用程序的选项。这对于优化生成过程或注入特定配置非常有</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 build：before 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/81e5857d6d3ff5e375f0f6734e25daac/</link>
      <pubDate>Sun, 20 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/81e5857d6d3ff5e375f0f6734e25daac/</guid>
      <description>build:before 钩子在 Nuxt.js 中是一种有力的工具，使开发者能够在应用的构建流程开始之前进行自定义处理和配置。在处理动态需求和配置时，开发者可以充分利用这个钩子来增强应用的有效性和灵活性。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 modules：before 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/62721fbcf90812e7cb4f8192dad8c51b/</link>
      <pubDate>Tue, 15 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/62721fbcf90812e7cb4f8192dad8c51b/</guid>
      <description>modules:before 是 Nuxt.js 中一个重要的生命周期钩子，在 Nuxt 应用初始化期间被触发。该钩子允许开发者在安装用户定义的模块之前执行某些操作，如配置或环境设置。</description>
    </item>
    <item>
      <title>Nuxt Kit 实用工具的使用示例</title>
      <link>https://blog.cmdragon.cn/posts/da99cebfd9827341b9b542b233ed4a09/</link>
      <pubDate>Wed, 25 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/da99cebfd9827341b9b542b233ed4a09/</guid>
      <description>摘要：本文介绍了Nuxt Kit工具在开发集成工具或插件时，如何访问和修改Nuxt应用中使用的Vite或webpack配置，以实现定制化构建需求。内容包括功能概述、项目示例、详细步骤说明了如何访问Vite配置及Webpack配置，并通过代码示例展示了配置过程，最后总结了Nuxt Kit在此类操作中的作用和优势。</description>
    </item>
    <item>
      <title>Nuxt Kit 的使用指南：从加载到构建</title>
      <link>https://blog.cmdragon.cn/posts/a19304accfa8f913a68caae99dfa8a68/</link>
      <pubDate>Thu, 12 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a19304accfa8f913a68caae99dfa8a68/</guid>
      <description>摘要：本文详细介绍了Nuxt Kit的使用方法，包括如何使用loadNuxt加载配置、buildNuxt进行项目构建、loadNuxtConfig单独加载配置以及writeTypes生成TypeScript配置，旨在帮助前端开发者高效地以编程方式管理和交互Nuxt应用。</description>
    </item>
    <item>
      <title>使用 nuxi info 查看 Nuxt 项目详细信息</title>
      <link>https://blog.cmdragon.cn/posts/f7aeb6ad9c1c9cf3980419a88a66b082/</link>
      <pubDate>Thu, 05 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/f7aeb6ad9c1c9cf3980419a88a66b082/</guid>
      <description>摘要：文章介绍了nuxi info命令的使用方法，这是一个Nuxt.js命令行工具，用于查看当前或指定Nuxt项目的详细信息，包括版本号、配置、模块等，有助于开发者更好地管理和调试项目</description>
    </item>
    <item>
      <title>使用 updateAppConfig 更新 Nuxt 应用配置</title>
      <link>https://blog.cmdragon.cn/posts/870198cdff2bbd91a5af2182da7662a8/</link>
      <pubDate>Tue, 27 Aug 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/870198cdff2bbd91a5af2182da7662a8/</guid>
      <description>通过使用 updateAppConfig，你可以轻松地在应用运行时更新配置，而无需重新启动应用。这对于需要在运行时调整设置的应用场景非常有用。</description>
    </item>
    <item>
      <title>使用 `useAppConfig` ：轻松管理应用配置</title>
      <link>https://blog.cmdragon.cn/posts/9e044d4b53eab6a1bec49bb86b4c856c/</link>
      <pubDate>Thu, 11 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/9e044d4b53eab6a1bec49bb86b4c856c/</guid>
      <description>摘要：本文介绍了Nuxt开发中useAppConfig的使用，它便于访问和管理应用配置，支持动态加载资源、环境配置切换、权限管理、主题切换和配置文件集中管理等功能，通过实例展示了如何在Nuxt项目中应用此工具以实现配置灵活性和应用维护性。</description>
    </item>
    <item>
      <title>Nuxt 3 路由系统详解：配置与实践指南</title>
      <link>https://blog.cmdragon.cn/posts/3edf792d5e89f8a9aba11ef2a862f865/</link>
      <pubDate>Fri, 21 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/3edf792d5e89f8a9aba11ef2a862f865/</guid>
      <description>摘要：本文是一份关于Nuxt 3路由系统的详尽指南。它从介绍Nuxt 3的基本概念开始，包括Nuxt 3与Nuxt 2的区别和选择Nuxt 3的理由。然后，它详细解释了安装和配置Nuxt 3的步骤，以及Nuxt 3路由系统的基础知识，如动态路由和嵌套路由。接着，它介绍了路由中间件的作用和编写自定义中间件的方法，并讨论了页面布局、导航链接和页面过渡效果。最后，它涵盖了高级路由技巧，如异步数据获取、错误页面处理和路由守卫，以及实战案例分析，包括博客系统路由设计、电商网站路由设计和多语言支持的路由实现。最后，它讨论了性能优化与安全，包括路由懒加载、路由安全性和性能监控与调试。</description>
    </item>
  </channel>
</rss>
