<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/Vue/</link>
    <description>Recent content in Vue on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Nov 2024 00:18:53 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/Vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nuxt.js 应用中的 components：extend 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/1189b069abd2cfe9869abbbb4f7f340b/</link>
      <pubDate>Fri, 01 Nov 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/1189b069abd2cfe9869abbbb4f7f340b/</guid>
      <description>components:extend 是 Nuxt.js 中的一个生命周期钩子，允许开发者扩展新的组件到项目中。通过这个钩子，开发者可以动态地添加额外的组件，从而增强项目的功能和灵活性。</description>
    </item>
    <item>
      <title>理解 Vue 的 setup 应用程序钩子</title>
      <link>https://blog.cmdragon.cn/posts/6ed51fb844f1329c26155ff2a6ea4cd2/</link>
      <pubDate>Mon, 30 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6ed51fb844f1329c26155ff2a6ea4cd2/</guid>
      <description>摘要：本文详细介绍了Vue 3中setup函数的应用，包括其概念、特性、使用方法及重要性。setup函数作为组合API的核心，在组件实例化前被调用，用于设置响应式状态、计算属性、方法和生命周期钩子，支持在SSR和CSR中使用。</description>
    </item>
    <item>
      <title>Nuxt Kit 中的上下文处理</title>
      <link>https://blog.cmdragon.cn/posts/0c616d045fcf8bf6026e64847e449417/</link>
      <pubDate>Mon, 16 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/0c616d045fcf8bf6026e64847e449417/</guid>
      <description>Nuxt Kit 提供的上下文处理工具，尤其是 useNuxt 和 tryUseNuxt，为模块化开发提供了极大的便利。通过这些函数，开发者可以方便地访问 Nuxt 实例，从而更好地管理应用配置。</description>
    </item>
    <item>
      <title>探索 Nuxt Devtools：功能全面指南</title>
      <link>https://blog.cmdragon.cn/posts/ba266042f1b1b5d48140c44161ea0421/</link>
      <pubDate>Tue, 03 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/ba266042f1b1b5d48140c44161ea0421/</guid>
      <description>摘要：本文介绍了Nuxt Devtools的功能和使用方法，包括自动安装、手动安装和各项主要功能，如页面、组件、构建分析等。</description>
    </item>
    <item>
      <title>使用 onBeforeRouteLeave 组合式函数提升应用的用户体验</title>
      <link>https://blog.cmdragon.cn/posts/ec76c32456eed5c68935b916beb053c2/</link>
      <pubDate>Wed, 14 Aug 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/ec76c32456eed5c68935b916beb053c2/</guid>
      <description>摘要：本文介绍了在Nuxtjs中使用onBeforeRouteLeave组合式函数来提升应用用户体验的方法。onBeforeRouteLeave允许在组件离开当前路由前执行逻辑，如处理路由变化、清理资源、保存数据等。文章通过示例展示了如何在Vue组件中注册此守卫，解释了其参数含义及使用注意事项，并提供了完整示例代码，强调了此功能对增强用户体验的重要性。</description>
    </item>
    <item>
      <title>使用 defineNuxtComponent`定义 Vue 组件</title>
      <link>https://blog.cmdragon.cn/posts/8e9977db3a733bc649877087c3b87e91/</link>
      <pubDate>Fri, 09 Aug 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/8e9977db3a733bc649877087c3b87e91/</guid>
      <description>摘要：本文介绍了在Nuxt 3中使用defineNuxtComponent辅助函数定义类型安全的Vue组件的方法，适用于习惯Options API的开发者。defineNuxtComponent支持asyncData获取异步数据及head设置自定义头部信息，为Nuxt应用提供更多功能。</description>
    </item>
    <item>
      <title>使用 $fetch 进行 HTTP 请求</title>
      <link>https://blog.cmdragon.cn/posts/a189c208200be9973a4dd8d9029f2ab2/</link>
      <pubDate>Fri, 02 Aug 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a189c208200be9973a4dd8d9029f2ab2/</guid>
      <description>摘要：文章介绍了Nuxt3中使用$fetch进行HTTP请求的方法，它是基于ofetch库，支持SSR和自动缓存。$fetch简化了HTTP请求，支持GET、POST等，可结合useAsyncData或useFetch优化数据获取，避免重复请求，适用于服务器端渲染。</description>
    </item>
    <item>
      <title>服务端渲染中的数据获取：结合 useRequestHeaders 与 useFetch</title>
      <link>https://blog.cmdragon.cn/posts/c88fddf7a8ad9112ff80c9a25cda09d2/</link>
      <pubDate>Wed, 24 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/c88fddf7a8ad9112ff80c9a25cda09d2/</guid>
      <description>摘要：本文介绍Vue服务端渲染中使用useRequestHeaders获取请求头部信息，如cookie和authorization，示例展示了如何在SSR环境下结合useFetch进行API调用，注意浏览器环境返回空对象。</description>
    </item>
    <item>
      <title>Nuxt框架中内置组件详解及使用指南（四）</title>
      <link>https://blog.cmdragon.cn/posts/9032c61e840462c63717de392173b4f5/</link>
      <pubDate>Tue, 09 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/9032c61e840462c63717de392173b4f5/</guid>
      <description>摘要：本文详细介绍了Nuxt 3框架中的两个内置组件：&lt;NuxtErrorBoundary&gt;和&lt;NuxtIsland&gt;的使用方法与示例。&lt;NuxtErrorBoundary&gt;用于捕获并处理客户端错误，提供了错误处理和自定义错误展示的功能；而&lt;NuxtIsland&gt;是一个实验性组件，用于渲染无客户端JavaScript的静态内容，以优化页面加载速度。文章包含组件的基本用法、配置步骤以及完整实例代码，有助于开发者高效利用这些组件提升Nuxt应用的性能与用户体验。</description>
    </item>
    <item>
      <title>Nuxt框架中内置组件详解及使用指南（二）</title>
      <link>https://blog.cmdragon.cn/posts/658c8df0cd7e59fe7606507b14b2c37c/</link>
      <pubDate>Sun, 07 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/658c8df0cd7e59fe7606507b14b2c37c/</guid>
      <description>摘要：“本文详细介绍了Nuxt 3中&lt;NuxtPage&gt;和&lt;NuxtLayout&gt;组件的使用方法，包括组件的基本概念、属性、自定义属性、获取引用以及完整示例，展示了如何在Nuxt项目中有效利用这两个组件。</description>
    </item>
    <item>
      <title>Nuxt 3 路由系统详解：配置与实践指南</title>
      <link>https://blog.cmdragon.cn/posts/3edf792d5e89f8a9aba11ef2a862f865/</link>
      <pubDate>Fri, 21 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/3edf792d5e89f8a9aba11ef2a862f865/</guid>
      <description>摘要：本文是一份关于Nuxt 3路由系统的详尽指南。它从介绍Nuxt 3的基本概念开始，包括Nuxt 3与Nuxt 2的区别和选择Nuxt 3的理由。然后，它详细解释了安装和配置Nuxt 3的步骤，以及Nuxt 3路由系统的基础知识，如动态路由和嵌套路由。接着，它介绍了路由中间件的作用和编写自定义中间件的方法，并讨论了页面布局、导航链接和页面过渡效果。最后，它涵盖了高级路由技巧，如异步数据获取、错误页面处理和路由守卫，以及实战案例分析，包括博客系统路由设计、电商网站路由设计和多语言支持的路由实现。最后，它讨论了性能优化与安全，包括路由懒加载、路由安全性和性能监控与调试。</description>
    </item>
    <item>
      <title>Nuxt 3组件开发与管理</title>
      <link>https://blog.cmdragon.cn/posts/cc7cd2c85be6f573dbbab01a25b78ed7/</link>
      <pubDate>Thu, 20 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/cc7cd2c85be6f573dbbab01a25b78ed7/</guid>
      <description>摘要：本文深入探讨了Nuxt 3的组件开发与管理，从基础概念、安装配置、目录结构、组件分类与开发实践、生命周期与优化，到测试与维护策略。详细介绍了Nuxt 3的核心特点，如服务器端渲染（SSR）、静态站点生成（SSG）以及与Vue生态系统的无缝集成。文章以Nuxt 3为基础，指导开发者如何高效构建高性能、可维护的Vue应用程序。内容涵盖了基本组件的定义与分类、独立组件与函数式组件的示例、Props和Slots的使用、Composition API的引入，以及组件的生命周期与优化方法。同时，文章还提供了组件开发的实践案例，包括自定义组件开发、异步加载组件、事件与方法的使用，以及组件测试与文档化指南。通过结构化的目录组织与详细的代码示例，旨在帮助开发者高效管理与维护组件，实现代码的复用与模块化。</description>
    </item>
    <item>
      <title>Vue第三方库与插件实战手册</title>
      <link>https://blog.cmdragon.cn/posts/6d4bb716ebc294e2dc6206813d2af303/</link>
      <pubDate>Sat, 08 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6d4bb716ebc294e2dc6206813d2af303/</guid>
      <description>这篇文章介绍了如何在Vue框架中实现数据的高效验证与处理，以及如何集成ECharts、D3.js、Chart.js等图表库优化数据可视化效果。同时，探讨了Progressive Web App(PWA)的接入与优化策略，以提升Web应用的用户体验与加载速度。</description>
    </item>
  </channel>
</rss>
