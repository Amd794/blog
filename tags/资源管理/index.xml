<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>资源管理 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 资源管理 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 08 Apr 2025 00:02:10 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FastAPI依赖注入作用域与生命周期控制</title>
      <link>https://blog.cmdragon.cn/posts/17629ae4ff3670792f832752e5cb8c33/</link>
      <pubDate>Tue, 08 Apr 2025 00:02:10 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/17629ae4ff3670792f832752e5cb8c33/</guid>
      <description>FastAPI框架中，依赖项的作用域决定了它们的创建和销毁时机，主要分为应用级和请求级两种。应用级依赖在整个应用生命周期内只初始化一次，适合长期保持的昂贵资源；请求级依赖在每个HTTP请求时创建新实例，适合需要频繁初始化的资源。通过&lt;code&gt;yield&lt;/code&gt;语法可以实现请求级依赖的生命周期控制，确保资源在使用后正确释放。合理划分依赖项作用域和精确控制生命周期，能显著提升应用性能和资源利用率。</description>
    </item>
  </channel>
</rss>
