<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UseFetch on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/useFetch/</link><description>Recent content in UseFetch on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 21 Aug 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/useFetch/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 refreshNuxtData 刷新 Nuxt应用 中的数据</title><link>https://blog.cmdragon.cn/posts/1d66580f8a7e8510b9f9af6272aecc2e/</link><pubDate>Wed, 21 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/1d66580f8a7e8510b9f9af6272aecc2e/</guid><description>refreshNuxtData 是 Nuxt 3 中一个非常有用的函数，能够帮助你在数据更新后及时刷新页面。通过了解如何刷新所有数据和刷新特定数据，你可以更灵活地控制数据更新的时机和方式。</description></item><item><title>服务端渲染中的数据获取：结合 useRequestHeaders 与 useFetch</title><link>https://blog.cmdragon.cn/posts/c88fddf7a8ad9112ff80c9a25cda09d2/</link><pubDate>Wed, 24 Jul 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c88fddf7a8ad9112ff80c9a25cda09d2/</guid><description>摘要：本文介绍Vue服务端渲染中使用useRequestHeaders获取请求头部信息，如cookie和authorization，示例展示了如何在SSR环境下结合useFetch进行API调用，注意浏览器环境返回空对象。</description></item><item><title>探索Nuxt.js的useFetch：高效数据获取与处理指南</title><link>https://blog.cmdragon.cn/posts/29ff9113e98725ee69fa0148a47ae735/</link><pubDate>Mon, 15 Jul 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/29ff9113e98725ee69fa0148a47ae735/</guid><description>摘要：“探索Nuxt.js的useFetch：高效数据获取与处理指南”详述了Nuxt.js中useFetch函数的使用，包括基本用法、动态参数获取、拦截器使用，及参数详解。文章通过示例展示了如何从API获取数据，处理动态参数，自定义请求和响应，以及useFetch和useAsyncData的参数选项，帮助开发者掌握异步数据加载技巧。</description></item></channel></rss>