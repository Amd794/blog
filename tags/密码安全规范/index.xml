<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>密码安全规范 on cmdragon's Blog</title><link>/tags/%E5%AF%86%E7%A0%81%E5%AE%89%E5%85%A8%E8%A7%84%E8%8C%83/</link><description>Recent content in 密码安全规范 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 31 May 2025 09:34:15 +0800</lastBuildDate><atom:link href="/tags/%E5%AF%86%E7%A0%81%E5%AE%89%E5%85%A8%E8%A7%84%E8%8C%83/index.xml" rel="self" type="application/rss+xml"/><item><title>用户认证的魔法配方：从模型设计到密码安全的奇幻之旅</title><link>/posts/ac5bec89ea446ce4f6b01891f640fbfe/</link><pubDate>Sat, 31 May 2025 09:34:15 +0800</pubDate><guid>/posts/ac5bec89ea446ce4f6b01891f640fbfe/</guid><description>用户认证体系的核心在于用户模型设计和密码安全规范。用户模型需包含唯一用户名、邮箱、加密密码等基础字段，使用SQLAlchemy ORM进行数据库集成。密码存储必须使用强哈希算法（如bcrypt），并自动加盐处理。密码验证流程应包含多级安全检查，确保用户数据安全。数据库集成推荐使用异步驱动提升性能，并通过Alembic进行数据库迁移。常见报错如唯一约束冲突和空对象问题，需在代码中预先检查和处理。</description></item></channel></rss>