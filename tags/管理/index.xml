<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>管理 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 管理 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 25 Oct 2024 00:18:53 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nuxt.js 应用中的 pages：extend 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/22eb7478a08b6f78043cd5fae24c7ad4/</link>
      <pubDate>Fri, 25 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/22eb7478a08b6f78043cd5fae24c7ad4/</guid>
      <description>pages:extend 是 Nuxt.js 中的一个生命周期钩子，在页面路由解析完成后被调用。这个钩子允许开发者添加、修改或删除路由配置，为自定义页面路由的管理提供灵活性，进而影响整个应用的导航。</description>
    </item>
    <item>
      <title>Nuxt Kit 中的页面和路由管理</title>
      <link>https://blog.cmdragon.cn/posts/ca15f62138ac0f090f2b9c215756b50a/</link>
      <pubDate>Tue, 17 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/ca15f62138ac0f090f2b9c215756b50a/</guid>
      <description>摘要：本文介绍了Nuxt Kit中页面和路由管理的高级功能，包括extendPages自定义页面路由、extendRouteRules定义复杂路由逻辑及addRouteMiddleware注册路由中间件。通过这些功能，开发者能够灵活地添加、修改路由，设置缓存、重定向等，并实现访问控制等中间件处理，以提升Web应用的开发效率和可维护性。</description>
    </item>
    <item>
      <title>Nuxt Kit 组件管理：注册与自动导入</title>
      <link>https://blog.cmdragon.cn/posts/c5f0133bf1d896616b703a00c560fb9b/</link>
      <pubDate>Sun, 15 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/c5f0133bf1d896616b703a00c560fb9b/</guid>
      <description>Nuxt Kit 为组件的注册和导入提供了灵活高效的解决方案。无论你是要批量导入组件，还是单独处理特定组件，这些工具都能够满足你的需求。使用这些方法可以显著提升开发效率、减少管理复杂性。</description>
    </item>
    <item>
      <title>清除 Nuxt 状态缓存：clearNuxtState</title>
      <link>https://blog.cmdragon.cn/posts/54aef7263724952013d0fd71fcdcb38e/</link>
      <pubDate>Wed, 07 Aug 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/54aef7263724952013d0fd71fcdcb38e/</guid>
      <description>摘要：本文介绍了Nuxt.js框架中clearNuxtState方法的使用，该方法用于清除useState管理的状态缓存，确保应用状态的有效性和一致性。文章涵盖了clearNuxtState的方法签名、使用场景及示例代码，演示了如何在组件中实现状态的重置，适用于需要在特定条件下重置状态或页面切换时保持状态清新的场景。</description>
    </item>
    <item>
      <title>使用 `useAppConfig` ：轻松管理应用配置</title>
      <link>https://blog.cmdragon.cn/posts/9e044d4b53eab6a1bec49bb86b4c856c/</link>
      <pubDate>Thu, 11 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/9e044d4b53eab6a1bec49bb86b4c856c/</guid>
      <description>摘要：本文介绍了Nuxt开发中useAppConfig的使用，它便于访问和管理应用配置，支持动态加载资源、环境配置切换、权限管理、主题切换和配置文件集中管理等功能，通过实例展示了如何在Nuxt项目中应用此工具以实现配置灵活性和应用维护性。</description>
    </item>
  </channel>
</rss>
