<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>速率限制 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6/</link><description>Recent content in 速率限制 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 02 Jul 2025 22:05:04 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI安全加固：密钥轮换、限流策略与安全头部如何实现三重防护？</title><link>https://blog.cmdragon.cn/posts/f96ba438de34dc197fd2598f91ae133d/</link><pubDate>Wed, 02 Jul 2025 22:05:04 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f96ba438de34dc197fd2598f91ae133d/</guid><description>FastAPI框架安全加固方案包括密钥轮换自动化、请求频率限制和安全头部配置。密钥轮换通过定时任务和双密钥过渡机制实现，确保JWT验证的安全性。请求频率限制使用Redis存储和分层防护策略，有效防止恶意请求。安全头部配置通过中间件强制HTTPS，并添加CSP、HSTS等头部，增强应用的安全性。这些措施结合KMS服务和WAF，可显著提升FastAPI应用的安全防护能力。</description></item><item><title>如何用 FastAPI 和 RBAC 打造坚不可摧的安全堡垒？</title><link>https://blog.cmdragon.cn/posts/d878b5dbef959058b8098551c70594f8/</link><pubDate>Fri, 27 Jun 2025 04:55:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d878b5dbef959058b8098551c70594f8/</guid><description>FastAPI 安全认证与 RBAC 系统原理基于角色的访问控制（RBAC）模型，包含用户、角色和权限三个核心要素。通过 JWT 令牌实现认证，动态权限依赖注入进行权限校验。数据模型使用 Pydantic 和 SQLAlchemy 构建，密码存储采用 bcrypt 加密，并引入请求速率限制防止暴力破解。单元测试和错误处理确保系统稳定性，JWT 令牌设置过期时间以降低泄露风险。</description></item></channel></rss>