<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>钩子函数 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</link>
    <description>Recent content in 钩子函数 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 16 Oct 2024 00:18:53 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nuxt.js 应用中的 modules：done 事件钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/6427994cfc82edf8e740eb2b3edcead4/</link>
      <pubDate>Wed, 16 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/6427994cfc82edf8e740eb2b3edcead4/</guid>
      <description>modules:done 是 Nuxt.js 中一个重要的生命周期钩子，在 Nuxt 应用初始化期间触发。该钩子允许开发者在用户定义的模块安装完成后执行特定操作，如初始化后续配置或执行其他逻辑。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 page：transition：finish 钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/b19fb081d695b4867066656e73740093/</link>
      <pubDate>Thu, 10 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/b19fb081d695b4867066656e73740093/</guid>
      <description>page:transition:finish 是 Nuxt.js 中的一个事件钩子，专门用于处理页面过渡效果结束后的逻辑。这一钩子在页面过渡的 onAfterLeave 事件之后被调用，允许开发者在过渡完成后执行一些后续操作。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 app：suspense：resolve 钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/54de24a29ea32b400bc29f8b0b6a46b1/</link>
      <pubDate>Sun, 06 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/54de24a29ea32b400bc29f8b0b6a46b1/</guid>
      <description>app:suspense:resolve 是一个强大的钩子，允许开发者在异步数据解析完成后的最后一步执行必要的处理。通过合理使用该钩子，我们可以优化组件的渲染过程，并提供更好的用户体验。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 app：mounted 钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/0655a1f20f3c7d66e6b41c961df3103e/</link>
      <pubDate>Sat, 05 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/0655a1f20f3c7d66e6b41c961df3103e/</guid>
      <description>app:mounted 钩子在 Vue 应用的生命周期中扮演着重要角色，提供了在组件被挂载后的执行时机。通过合理利用这个钩子，我们能够提高组件的交互性、用户体验以及性能优化。确保在其内部代码的健壮性和清理机制，将为你的 Vue 应用带来显著的提升。</description>
    </item>
    <item>
      <title>Nuxt.js 应用中的 app：rendered 钩子详解</title>
      <link>https://blog.cmdragon.cn/posts/ff851c9049725c29ffd402e2d1f008e2/</link>
      <pubDate>Wed, 02 Oct 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/ff851c9049725c29ffd402e2d1f008e2/</guid>
      <description>摘要：本文详细介绍了 Nuxt.js 应用程序中的 app:rendered 钩子，包括其定义、调用时机、上下文信息以及通过实际案例展示如何记录性能和发送日志到服务器。</description>
    </item>
    <item>
      <title>深入理解 Nuxt.js 中的 app：data：refresh 钩子</title>
      <link>https://blog.cmdragon.cn/posts/64d5872b7beb55312b9d4537c9366d2b/</link>
      <pubDate>Sun, 29 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/64d5872b7beb55312b9d4537c9366d2b/</guid>
      <description>摘要：本文详细介绍了 Nuxt.js框架中的app:data:refresh钩子，包括其定义、用途、使用方法及实际应用案例。该钩子用于在数据刷新时执行额外处理，支持服务器端和客户端，有助于优化动态数据更新和用户体验。</description>
    </item>
    <item>
      <title>深入理解 Nuxt.js 中的 app：error 钩子</title>
      <link>https://blog.cmdragon.cn/posts/cb374534e888fe4a800e013eda896737/</link>
      <pubDate>Fri, 27 Sep 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/cb374534e888fe4a800e013eda896737/</guid>
      <description>摘要：本文深入讲解了Nuxt.js框架中的app:error钩子，介绍其在处理web应用中致命错误的重要作用、使用方法及实际应用场景。通过创建Nuxt项目、定义插件、触发错误与测试等步骤，演示了如何利用此钩子捕获错误、记录日志及提升用户体验，最后总结其关键要点包括错误处理、友好提示及监控集成。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（十一）</title>
      <link>https://blog.cmdragon.cn/posts/1229fdac282a0baba2576f73c41b4f0e/</link>
      <pubDate>Fri, 05 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/1229fdac282a0baba2576f73c41b4f0e/</guid>
      <description>摘要：本文详细介绍了Nuxt3中几个关键的生命周期钩子和它们的使用方法，包括webpack:done用于Webpack编译完成后执行操作，webpack:progress监听编译进度，render:response和render:html分别在响应发送前后修改响应内容，以及render:island针对岛屿组件的HTML渲染前的修改，提供了具体的示例代码和应用情景。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（十）</title>
      <link>https://blog.cmdragon.cn/posts/d5c00a7775a1fc1b83ecfb6dd7136fa7/</link>
      <pubDate>Thu, 04 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/d5c00a7775a1fc1b83ecfb6dd7136fa7/</guid>
      <description>摘要：本文详细介绍了Nuxt3框架中的五个webpack钩子函数：webpack:configResolved用于在webpack配置解析后读取和修改配置；webpack:compile在编译开始前调用，可修改编译选项；webpack:compiled在编译完成后调用，可处理编译结果；webpack:change在开发模式下文件变化时触发，监控文件更改；webpack:error在编译出错时捕获错误信息，以便于错误处理。并通过示例代码展示了各钩子的使用方法。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（九）</title>
      <link>https://blog.cmdragon.cn/posts/b80c188353cc5f1e84aad57aea45c848/</link>
      <pubDate>Wed, 03 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/b80c188353cc5f1e84aad57aea45c848/</guid>
      <description>摘要：本文介绍了Nuxt3中与Vite相关的五个生命周期钩子，包括vite:extend、vite:extendConfig、vite:configResolved、vite:serverCreated和vite:compiled，展示了如何在每个钩子中扩展Vite配置、读取配置、添加中间件和处理编译事件。每个钩子都有详细的描述和示例代码，帮助开发者在Nuxt应用中实现自定义构建逻辑和服务器配置。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（七）</title>
      <link>https://blog.cmdragon.cn/posts/a65c336a08214aa264f38f893fd9fe64/</link>
      <pubDate>Mon, 01 Jul 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/a65c336a08214aa264f38f893fd9fe64/</guid>
      <description>摘要：文章阐述了Nuxt3中Nitro生命周期钩子的使用，如nitro:config自定义配置、nitro:init注册构建钩子、nitro:build:before/after调整构建设置及处理公共资产、prerender:routes扩展预渲染路由、build:error捕获构建错误，通过示例代码指导开发者优化项目构建与部署流程。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（八）</title>
      <link>https://blog.cmdragon.cn/posts/627bff83be4d55aabeccd96fdb6bab35/</link>
      <pubDate>Sun, 30 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/627bff83be4d55aabeccd96fdb6bab35/</guid>
      <description>摘要：本文介绍了Nuxt3框架中的一些重要生命周期钩子，如prepare:types用于自定义TypeScript配置和类型声明，listen用于在开发服务器启动时注册自定义事件监听器，schema:extend和schema:resolved用于扩展和处理已解析的模式，以及schema:beforeWrite和schema:written分别在模式写入前后的处理。通过示例代码展示了如何在Nuxt插件中利用这些钩子进行自定义操作。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（六）</title>
      <link>https://blog.cmdragon.cn/posts/16e6c55234a5fd9caeea0fcff47f8b6d/</link>
      <pubDate>Sun, 30 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/16e6c55234a5fd9caeea0fcff47f8b6d/</guid>
      <description>摘要：本文深入解析了Nuxt3框架中的多个核心生命周期钩子和组件注册功能，包括imports:sources、imports:extend、imports:context、imports:dirs、components:dirs及components:extend，通过实例代码指导开发者如何在不同场景下有效运用这些钩子函数来扩展导入源、优化组件导入流程及增强项目结构灵活性。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（五）</title>
      <link>https://blog.cmdragon.cn/posts/9ac29e7085b44b322682133dd07511c8/</link>
      <pubDate>Sat, 29 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/9ac29e7085b44b322682133dd07511c8/</guid>
      <description>摘要：本文详细介绍了Nuxt3中的六个核心生命周期钩子及其用法，包括build:done、build:manifest、builder:generateApp、builder:watch、pages:extend和server:devHandler:handler。内容涵盖各钩子的调用时机、参数、环境、功能描述及具体示例代码，帮助开发者深入理解如何在Nuxt应用的构建、运行、开发及部署等阶段自定义行为和逻辑。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（四）</title>
      <link>https://blog.cmdragon.cn/posts/7ce28296234629061401246df9db573b/</link>
      <pubDate>Fri, 28 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/7ce28296234629061401246df9db573b/</guid>
      <description>概述了Nuxt3的六个关键生命周期钩子用途：modules:before至build:before，指导如何在应用初始化、模块管理、配置解析、模板处理及构建前执行自定义操作，附带实例代码，强化Nuxt应用的灵活性和可控性。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（三）</title>
      <link>https://blog.cmdragon.cn/posts/5f1ddd6ac7a67110834fe55de143c90d/</link>
      <pubDate>Thu, 27 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/5f1ddd6ac7a67110834fe55de143c90d/</guid>
      <description>摘要：概述了Nuxt3的关键生命周期钩子用途，如page:finish用于页面加载后处理，page:transition:finish处理过渡效果完成，kit:compatibility扩展兼容性检查，ready标示应用启动就绪，close执行应用关闭清理，及restart控制应用重启流程，附带示例代码</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（二）</title>
      <link>https://blog.cmdragon.cn/posts/035ad4b6880c8ceb996e156237ce5d89/</link>
      <pubDate>Wed, 26 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/035ad4b6880c8ceb996e156237ce5d89/</guid>
      <description>摘要：本文深入介绍了Nuxt.js框架中几个关键的生命周期钩子函数，包括app:redirected（SSR环境下重定向前触发）、app:beforeMount（CSR下应用挂载前）、app:mounted（CSR下Vue应用在浏览器挂载时）、app:suspense:resolve（CSR中Suspense组件解析子组件完成时）以及link:prefetch（CSR中NuxtLink预取链接时）和page:start（CSR页面渲染启动时）。通过代码示例展示了如何利用defineNuxtPlugin定义插件并借助nuxtApp.hook监听这些钩子以执行特定任务，强调了各钩子的应用场景及在客户端和服务器端的不同行为。</description>
    </item>
    <item>
      <title>Nuxt3 的生命周期和钩子函数（一）</title>
      <link>https://blog.cmdragon.cn/posts/5fa69707f657db97640ee64788afbd03/</link>
      <pubDate>Tue, 25 Jun 2024 00:18:53 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/5fa69707f657db97640ee64788afbd03/</guid>
      <description>摘要：本文是关于Nuxt3的系列文章之一，主要探讨Nuxt3的生命周期和钩子函数，引导读者深入了解其在前端开发中的应用。文章提供了往期相关文章链接，涉及Nuxt中间件、Composables、状态管理、路由系统、组件开发等多个方面，帮助读者全面掌握Nuxt3框架的特性和实践技巧。</description>
    </item>
  </channel>
</rss>
