<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>国际化 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E5%9B%BD%E9%99%85%E5%8C%96/</link>
    <description>Recent content in 国际化 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 12 May 2024 16:51:04 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E5%9B%BD%E9%99%85%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django国际化与本地化指南</title>
      <link>https://blog.cmdragon.cn/posts/fb3988914d7d0faa88af45cb045aba9e/</link>
      <pubDate>Sun, 12 May 2024 16:51:04 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/fb3988914d7d0faa88af45cb045aba9e/</guid>
      <description>&lt;img src=&#34;https://static.cmdragon.cn/blog/images/2024_05_12 16_54_10.png@blog&#34; title=&#34;2024_05_12 16_54_10.png&#34; alt=&#34;2024_05_12 16_54_10.png&#34;/&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在数字化时代，网站和应用程序必须跨越地域限制，服务于全球用户。这就是国际化（Internationalization, I18N）和本地化（Localization,&#xA;L10N）的重要性日益凸显。它们不仅关乎用户体验，也影响着企业的全球市场竞争力。一个成功的国际化应用不仅能让用户感受到尊重，还能提高用户的满意度和忠诚度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入学习和理解Django模板层：构建动态页面</title>
      <link>https://blog.cmdragon.cn/posts/bea111715764852706f5ef8b2e4401e4/</link>
      <pubDate>Sun, 05 May 2024 20:53:51 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/bea111715764852706f5ef8b2e4401e4/</guid>
      <description>&lt;img src=&#34;https://static.cmdragon.cn/blog/images/2024_05_05 20_55_55.png@blog&#34; title=&#34;2024_05_05 20_55_55.png&#34; alt=&#34;2024_05_05 20_55_55.png&#34;/&gt;&#xA;&lt;h2 id=&#34;第一章模板语法基础&#34;&gt;&lt;strong&gt;第一章：模板语法基础&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;django模板语法介绍&#34;&gt;&lt;strong&gt;Django模板语法介绍&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Django模板语法是一种简洁而强大的语法，用于在HTML中插入动态数据和控制页面逻辑。以下是一些常用的模板语法元素：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;：使用双大括号&lt;code&gt;{{ variable }}&lt;/code&gt;来表示变量，可以在模板中输出变量的值。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;标签&lt;/strong&gt;：使用单大括号和百分号&lt;code&gt;{% tag %}&lt;/code&gt;来表示标签，用于执行控制逻辑，如for循环、if语句等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;过滤器&lt;/strong&gt;：在变量后面使用管道符&lt;code&gt;|&lt;/code&gt;来应用过滤器，对变量进行处理，如格式化输出、大小写转换等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;变量、过滤器和标签&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
