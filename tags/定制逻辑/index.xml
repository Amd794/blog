<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>定制逻辑 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%AE%9A%E5%88%B6%E9%80%BB%E8%BE%91/</link><description>Recent content in 定制逻辑 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 10 Aug 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%AE%9A%E5%88%B6%E9%80%BB%E8%BE%91/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 defineNuxtRouteMiddleware 创建路由中间件</title><link>https://blog.cmdragon.cn/posts/9820edb9b255785446531ea7b1ac2269/</link><pubDate>Sat, 10 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9820edb9b255785446531ea7b1ac2269/</guid><description>本篇文章介绍了如何使用 &lt;code>defineNuxtRouteMiddleware&lt;/code> 创建和应用路由中间件。通过示例演示了如何处理错误页面和身份验证逻辑。随着对 Nuxt.js 中间件的理解，你可以更灵活地控制应用的路由行为，从而提升用户体验。</description></item></channel></rss>