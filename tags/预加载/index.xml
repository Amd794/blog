<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>预加载 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E9%A2%84%E5%8A%A0%E8%BD%BD/</link><description>Recent content in 预加载 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 26 Apr 2025 12:25:42 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E9%A2%84%E5%8A%A0%E8%BD%BD/index.xml" rel="self" type="application/rss+xml"/><item><title>Tortoise-ORM级联查询与预加载性能优化</title><link>https://blog.cmdragon.cn/posts/b7ffdb2ec4d5eaa0388deddba3d07212/</link><pubDate>Sat, 26 Apr 2025 12:25:42 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b7ffdb2ec4d5eaa0388deddba3d07212/</guid><description>Tortoise-ORM通过异步方式实现级联查询与预加载机制，显著提升API性能。模型关联关系基础中，定义一对多关系如作者与文章。级联查询通过&lt;code>select_related&lt;/code>方法实现，预加载通过&lt;code>prefetch_related&lt;/code>优化N+1查询问题。实战中，构建高效查询接口，如获取作者详情及最近发布的文章。高级技巧包括嵌套关联预加载、条件预加载和自定义预加载方法。常见报错处理如&lt;code>RelationNotFoundError&lt;/code>、&lt;code>QueryTimeoutError&lt;/code>和&lt;code>ValidationError&lt;/code>。最佳实践建议包括测试环境查询分析、添加Redis缓存层、添加数据库索引和分页限制返回数据量。</description></item><item><title>使用 preloadRouteComponents 提升 Nuxt 应用的性能</title><link>https://blog.cmdragon.cn/posts/476d81c3a7972e5b8d84db523437836c/</link><pubDate>Mon, 19 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/476d81c3a7972e5b8d84db523437836c/</guid><description>preloadRouteComponents 是提升 Nuxt 应用性能的一个简单而有效的工具。通过在适当的时候预加载路由组件，你可以为用户提供更快速、更流畅的导航体验。</description></item><item><title>使用 preloadComponents 进行组件预加载</title><link>https://blog.cmdragon.cn/posts/b54b94bb4434e506c17b07f68a13bf94/</link><pubDate>Sun, 18 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b54b94bb4434e506c17b07f68a13bf94/</guid><description>摘要：本文介绍Nuxt 3中的preloadComponents功能，用于预加载全局注册的组件以减少首次渲染阻塞时间，通过实例演示如何设置并使用该工具来提升页面性能。</description></item></channel></rss>