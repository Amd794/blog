<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>无状态会话 on cmdragon's Blog</title><link>/tags/%E6%97%A0%E7%8A%B6%E6%80%81%E4%BC%9A%E8%AF%9D/</link><description>Recent content in 无状态会话 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 10 Jun 2025 09:02:35 +0800</lastBuildDate><atom:link href="/tags/%E6%97%A0%E7%8A%B6%E6%80%81%E4%BC%9A%E8%AF%9D/index.xml" rel="self" type="application/rss+xml"/><item><title>JWT令牌如何在FastAPI中实现安全又高效的生成与验证？</title><link>/posts/df4422756c7a081ea0f7f16c6364d8b2/</link><pubDate>Tue, 10 Jun 2025 09:02:35 +0800</pubDate><guid>/posts/df4422756c7a081ea0f7f16c6364d8b2/</guid><description>JWT（JSON Web Token）是一种用于安全传递声明信息的开放标准，由头部、载荷和签名三部分组成。在FastAPI中，JWT常用于用户身份认证、API授权和跨服务通信。通过&lt;code>python-jose&lt;/code>库生成和验证JWT，核心步骤包括配置安全参数、生成访问令牌、实现登录接口和验证机制。令牌生成时需设置过期时间以防止长期盗用，验证时通过中间件检查令牌的有效性。此外，可通过刷新令牌机制更新访问令牌，确保系统的安全性和用户体验。</description></item></channel></rss>