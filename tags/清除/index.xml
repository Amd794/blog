<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>清除 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%B8%85%E9%99%A4/</link><description>Recent content in 清除 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 07 Aug 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%B8%85%E9%99%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>清除 Nuxt 状态缓存：clearNuxtState</title><link>https://blog.cmdragon.cn/posts/54aef7263724952013d0fd71fcdcb38e/</link><pubDate>Wed, 07 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/54aef7263724952013d0fd71fcdcb38e/</guid><description>摘要：本文介绍了Nuxt.js框架中clearNuxtState方法的使用，该方法用于清除useState管理的状态缓存，确保应用状态的有效性和一致性。文章涵盖了clearNuxtState的方法签名、使用场景及示例代码，演示了如何在组件中实现状态的重置，适用于需要在特定条件下重置状态或页面切换时保持状态清新的场景。</description></item><item><title>清除 Nuxt 数据缓存：clearNuxtData</title><link>https://blog.cmdragon.cn/posts/b14ec150986ae8b8e56d2c37637e04fd/</link><pubDate>Tue, 06 Aug 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b14ec150986ae8b8e56d2c37637e04fd/</guid><description>摘要：本文详细介绍了Nuxt.js框架中的clearNuxtData方法，用于清除useAsyncData和useFetch缓存的数据、错误状态和待处理promises，以实现数据的实时更新和重载。通过实际示例展示了在不同页面如何应用clearNuxtData来提升用户体验和数据新鲜度，包括方法签名、使用场景及具体代码实现步骤。</description></item></channel></rss>