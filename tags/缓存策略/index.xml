<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>缓存策略 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5/</link>
    <description>Recent content in 缓存策略 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Jun 2025 05:27:13 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FastAPI权限缓存：你的性能瓶颈是否藏在这只“看不见的手”里？</title>
      <link>https://blog.cmdragon.cn/posts/c110b0765e278d3bf5d77582c50e4dd6/</link>
      <pubDate>Mon, 23 Jun 2025 05:27:13 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/c110b0765e278d3bf5d77582c50e4dd6/</guid>
      <description>FastAPI权限缓存与性能优化通过减少重复权限验证提升系统性能。使用&lt;code&gt;lru_cache&lt;/code&gt;实现内存级缓存，或通过Redis实现分布式缓存，有效降低数据库查询压力。优化策略包括异步IO操作、查询优化、缓存预热和分页优化，显著提升QPS和响应速度。常见报错如403 Forbidden和422 Validation Error，需检查权限缓存和接口参数。缓存策略根据业务场景选择，如单实例部署使用&lt;code&gt;lru_cache&lt;/code&gt;，微服务集群使用Redis。</description>
    </item>
    <item>
      <title>Django性能优化：提升加载速度</title>
      <link>https://blog.cmdragon.cn/posts/c2c209c55d5a7e090dd79f486f581a31/</link>
      <pubDate>Mon, 20 May 2024 20:16:28 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/c2c209c55d5a7e090dd79f486f581a31/</guid>
      <description>&lt;img src=&#34;https://static.cmdragon.cn/blog/images/2024_05_20 20_18_55.png@blog&#34; title=&#34;2024_05_20 20_18_55.png&#34; alt=&#34;2024_05_20 20_18_55.png&#34;/&gt;&#xA;&lt;h2 id=&#34;第一章django性能优化概述&#34;&gt;&lt;strong&gt;第一章：Django性能优化概述&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-性能优化的意义&#34;&gt;&lt;strong&gt;1.1 性能优化的意义&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;性能优化是Web开发中的关键环节，它直接影响到网站的用户体验。良好的性能意味着更快的页面加载速度，更低的延迟，更高的用户满意度。在竞争激烈的市场环境下，快速加载的网站能够吸引和留住用户，提升搜索引擎排名，降低跳出率，从而提高网站的转化率和商业价值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>探索图片与Base64编码的优势与局限性</title>
      <link>https://blog.cmdragon.cn/posts/1e59739185bd86e2f23130f48e246411/</link>
      <pubDate>Sun, 03 Mar 2024 19:39:27 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/1e59739185bd86e2f23130f48e246411/</guid>
      <description>&lt;img src=&#34;https://static.cmdragon.cn/blog/images/2024_03_03 19_42_35.png@blog&#34; title=&#34;2024_03_03 19_42_35.png&#34; alt=&#34;2024_03_03 19_42_35.png&#34;/&gt;&#xA;&lt;h2 id=&#34;一图片和base64编码的关系&#34;&gt;一、图片和Base64编码的关系：&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;图片是一种常见的媒体文件格式，可以通过URL进行访问和加载。&lt;/li&gt;&#xA;&lt;li&gt;Base64编码是一种将二进制数据转换为ASCII字符的编码方式，可以将图片数据转换为字符串形式。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cmdragon.cn/img2base64&#34;&gt;图片Base64相互转换 | 一个覆盖广泛主题工具的高效在线平台(cmdragon.cn)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
