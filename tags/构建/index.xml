<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>构建 on cmdragon's Blog</title><link>/tags/%E6%9E%84%E5%BB%BA/</link><description>Recent content in 构建 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 27 Nov 2024 00:18:53 +0800</lastBuildDate><atom:link href="/tags/%E6%9E%84%E5%BB%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 webpack：progress 事件钩子</title><link>/posts/47b46cd0c184932afc8428cccb2e3bc8/</link><pubDate>Wed, 27 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/47b46cd0c184932afc8428cccb2e3bc8/</guid><description>webpack:progress 钩子用于监听 Webpack 在构建过程中的进度更新。这是一个非常有用的特性，特别是在构建大型应用时，可以给开发者实时反馈，以便他们知道构建的进展情况。</description></item><item><title>Nuxt.js 应用中的 webpack：compile 事件钩子</title><link>/posts/375bd210d2c7634b026886f4fd5e7ff0/</link><pubDate>Fri, 22 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/375bd210d2c7634b026886f4fd5e7ff0/</guid><description>webpack:compile 钩子是 Nuxt.js 和 Webpack 集成中的一个重要部分，它允许开发者在实际编译过程开始之前执行一些自定义逻辑。通过这一钩子，您可以获取编译的选项并进行相应的修改，为构建定制化处理。</description></item><item><title>Nuxt.js 应用中的 webpack：configResolved事件钩子</title><link>/posts/c9d5ec8a241258b72058270c7c4a22e5/</link><pubDate>Thu, 21 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/c9d5ec8a241258b72058270c7c4a22e5/</guid><description>在 Nuxt.js 项目中，webpack:configResolved 钩子允许开发者在 Webpack 配置被解析后读取和修改该配置。这一钩子在所有 Webpack 配置被合并和确定后调用，为开发者提供了更进一步自定义的机会。</description></item><item><title>Nuxt.js 应用中的 vite：configResolved 事件钩子</title><link>/posts/2d9f94579481d38e0e9a7569cdfc31cb/</link><pubDate>Sun, 17 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/2d9f94579481d38e0e9a7569cdfc31cb/</guid><description>在 Nuxt 3 中，vite:configResolved 钩子允许开发者在 Vite 配置被解析后访问已解析的配置项。这使得在构建过程中能够根据最终的配置进行动态调整和扩展。</description></item><item><title>Nuxt.js 应用中的 vite：extendConfig 事件钩子</title><link>/posts/6bbb5474e945ea9d9a79c6cfcb6ec585/</link><pubDate>Sat, 16 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/6bbb5474e945ea9d9a79c6cfcb6ec585/</guid><description>通过合理使用 vite:extendConfig 钩子，开发者可以极大地增强 Nuxt 3 项目的灵活性和功能性，为不同的项目需求量身定制 Vite 配置。无论是添加插件、调整构建选项还是配置开发服务器，这些扩展可以有效提升开发体验和应用性能。</description></item><item><title>Nuxt.js 应用中的 vite：extendConfig 事件钩子详解</title><link>/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</link><pubDate>Tue, 12 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/7f2f4ee1ef433b4a19daa99da7bd9f07/</guid><description>vite:extendConfig 钩子允许开发者在 Vite 项目中扩展默认配置。这使得开发者可以根据特定需求自定义 Vite 的构建和开发行为，增强开发体验。</description></item><item><title>Nuxt.js 应用中的 vite：extend 事件钩子详解</title><link>/posts/cdba81aa5bb32dcc233a8bd29adee923/</link><pubDate>Mon, 11 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/cdba81aa5bb32dcc233a8bd29adee923/</guid><description>vite:extend 钩子允许开发者在 Vite 项目中扩展默认开发和构建配置。这使得开发者能够根据特定需求自定义 Vite 的行为，增强开发体验。</description></item><item><title>Nuxt.js 应用中的 prepare：types 事件钩子详解</title><link>/posts/68419c6dd94db64cbb46673ab19a5146/</link><pubDate>Fri, 08 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/68419c6dd94db64cbb46673ab19a5146/</guid><description>prepare:types 钩子为 Nuxt.js 开发者提供了灵活定制 TypeScript 配置和声明的能力。通过使用此钩子，开发者能够确保 TypeScript 配置和类型声明能够满足他们的项目需求，提升代码的可维护性和类型安全性。</description></item><item><title>Nuxt.js 应用中的 build：error 事件钩子详解</title><link>/posts/4a5e09829cf63001943fc481d69e01e0/</link><pubDate>Thu, 07 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/4a5e09829cf63001943fc481d69e01e0/</guid><description>build:error 是 Nuxt.js 中的一个生命周期钩子，当构建过程中发生错误时，该钩子将被调用。通过此钩子，开发者可以捕获和响应构建错误，进行相应的处理，例如记录日志或通知开发团队。</description></item><item><title>Nuxt.js 应用中的 nitro：build：public-assets 事件钩子详解</title><link>/posts/271508b42bc005f41e4fa31830a84e83/</link><pubDate>Tue, 05 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/271508b42bc005f41e4fa31830a84e83/</guid><description>nitro:build:public-assets 是 Nuxt 3 中的一个生命周期钩子，在复制公共资产之后调用。该钩子使开发者能够在构建 Nitro 服务器之前，对公共资产进行修改或处理，比如添加、删除或修改文件。</description></item><item><title>Nuxt.js 应用中的 nitro：build：before 事件钩子详解</title><link>/posts/a2820600faa85b49967d91cb7617c284/</link><pubDate>Mon, 04 Nov 2024 00:18:53 +0800</pubDate><guid>/posts/a2820600faa85b49967d91cb7617c284/</guid><description>nitro:build:before 是 Nuxt 3 中的一个生命周期钩子，专门用于在构建 Nitro 实例之前调用。这个钩子允许开发者在 Nitro 实例构建之前执行特定的操作，从而对构建过程进行定制和优化。</description></item><item><title>Nuxt.js 应用中的 builder：watch 事件钩子详解</title><link>/posts/4cfe5f35f1a903646731a6c05a54d1dc/</link><pubDate>Thu, 24 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/4cfe5f35f1a903646731a6c05a54d1dc/</guid><description>builder:watch 是 Nuxt.js 中的一个生命周期钩子，在开发环境的构建过程期间被调用。它允许开发者在监视到项目中的文件或目录发生变化时，执行特定的操作。这对于实现自定义构建过程或响应代码更改非常有用，使得开发体验更为高效。</description></item><item><title>Nuxt.js 应用中的 build：manifest 事件钩子详解</title><link>/posts/d69fdaae50601566d6f15c4e837c7cf3/</link><pubDate>Tue, 22 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/d69fdaae50601566d6f15c4e837c7cf3/</guid><description>build:manifest 是 Nuxt.js 中的一个生命周期钩子，它在 Vite 和 Webpack 构建清单期间被调用。利用这个钩子，开发者可以自定义 Nitro 渲染在最终 HTML 中的标签所使用的清单。这为对构建输出的深入控制提供了可能，开发者可以根据实际需要调整脚本和样式的引入方式。</description></item><item><title>Nuxt.js 应用中的 build：done 事件钩子详解</title><link>/posts/7b79085749b7f156ed36cf16fca42310/</link><pubDate>Mon, 21 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/7b79085749b7f156ed36cf16fca42310/</guid><description>build:done 是 Nuxt.js 的一个生命周期钩子，它在 Nuxt 应用的打包构建器完成运行后被调用。这个钩子为开发者提供了一个在构建过程结束后执行特定逻辑的机会，可以用于处理构建完成后的操作，如清理、通知、发布等。</description></item><item><title>Nuxt.js 应用中的 build：before 事件钩子详解</title><link>/posts/81e5857d6d3ff5e375f0f6734e25daac/</link><pubDate>Sun, 20 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/81e5857d6d3ff5e375f0f6734e25daac/</guid><description>build:before 钩子在 Nuxt.js 中是一种有力的工具，使开发者能够在应用的构建流程开始之前进行自定义处理和配置。在处理动态需求和配置时，开发者可以充分利用这个钩子来增强应用的有效性和灵活性。</description></item><item><title>Nuxt.js 应用中的 app：templates 事件钩子详解</title><link>/posts/f5146828ba00abf205274dba6d354783/</link><pubDate>Fri, 18 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/f5146828ba00abf205274dba6d354783/</guid><description>app:templates 是 Nuxt.js 中一个强大的生命周期钩子，它在 NuxtApp 生成过程中调用。这一钩子允许开发者自定义、修改或添加新文件到构建目录，提供了极大的灵活性和扩展性。</description></item><item><title>Nuxt Kit 实用工具的使用示例</title><link>/posts/da99cebfd9827341b9b542b233ed4a09/</link><pubDate>Wed, 25 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/da99cebfd9827341b9b542b233ed4a09/</guid><description>摘要：本文介绍了Nuxt Kit工具在开发集成工具或插件时，如何访问和修改Nuxt应用中使用的Vite或webpack配置，以实现定制化构建需求。内容包括功能概述、项目示例、详细步骤说明了如何访问Vite配置及Webpack配置，并通过代码示例展示了配置过程，最后总结了Nuxt Kit在此类操作中的作用和优势。</description></item><item><title>Nuxt Kit 的使用指南：从加载到构建</title><link>/posts/a19304accfa8f913a68caae99dfa8a68/</link><pubDate>Thu, 12 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/a19304accfa8f913a68caae99dfa8a68/</guid><description>摘要：本文详细介绍了Nuxt Kit的使用方法，包括如何使用loadNuxt加载配置、buildNuxt进行项目构建、loadNuxtConfig单独加载配置以及writeTypes生成TypeScript配置，旨在帮助前端开发者高效地以编程方式管理和交互Nuxt应用。</description></item><item><title>使用 nuxi preview 命令预览 Nuxt 应用</title><link>/posts/5b05eb48f0dc0e960be86be0f59de2fa/</link><pubDate>Sun, 08 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/5b05eb48f0dc0e960be86be0f59de2fa/</guid><description>摘要：本文介绍了如何使用nuxi preview命令预览Nuxt.js应用，包括安装和准备环境、启动预览服务器的步骤，以及如何指定根目录和使用自定义.env文件等高级用法。通过nuxi preview，开发者能够在本地快速验证应用构建后的实际效果，确保一切按预期工作。</description></item><item><title>使用 nuxi build 命令构建你的 Nuxt 应用程序</title><link>/posts/bc2bfb4e25c5fe348c22bcd59db71579/</link><pubDate>Fri, 30 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/bc2bfb4e25c5fe348c22bcd59db71579/</guid><description>nuxi build 命令是构建 Nuxt 应用程序的核心工具，它将你的应用程序打包成适合生产环境的格式。通过理解和使用不同的选项，如 &amp;ndash;prerender、&amp;ndash;dotenv 和 &amp;ndash;log-level，你可以更好地控制构建过程，并为生产环境做好充分准备。</description></item></channel></rss>