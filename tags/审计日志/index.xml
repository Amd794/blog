<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>审计日志 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%AE%A1%E8%AE%A1%E6%97%A5%E5%BF%97/</link><description>Recent content in 审计日志 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 01 Jul 2025 04:52:07 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%AE%A1%E8%AE%A1%E6%97%A5%E5%BF%97/index.xml" rel="self" type="application/rss+xml"/><item><title>RBAC权限模型如何让API访问控制既安全又灵活？</title><link>https://blog.cmdragon.cn/posts/9f01e838545ae8d34016c759ef461423/</link><pubDate>Tue, 01 Jul 2025 04:52:07 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9f01e838545ae8d34016c759ef461423/</guid><description>RBAC权限模型通过用户、角色和权限的关联实现访问控制，核心组件包括用户、角色、权限和API端点。数据模型使用SQLAlchemy定义，包含用户、角色、权限表及中间关联表。权限校验流程通过中间件实现，动态权限注入支持灵活路由配置。敏感操作审计日志记录用户访问信息，包括时间、端点和处理时长。常见报错如JWTDecodeError和NoneType错误，需检查令牌格式和用户处理。运行环境要求FastAPI、SQLAlchemy等，建议使用SSL加密部署。</description></item></channel></rss>