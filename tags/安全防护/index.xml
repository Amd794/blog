<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全防护 on cmdragon's Blog</title><link>/tags/%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4/</link><description>Recent content in 安全防护 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 20 Jun 2025 11:33:15 +0800</lastBuildDate><atom:link href="/tags/%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中打造坚不可摧的安全防线？</title><link>/posts/c74023c89591cfdffe2f392c8f3fac7a/</link><pubDate>Fri, 20 Jun 2025 11:33:15 +0800</pubDate><guid>/posts/c74023c89591cfdffe2f392c8f3fac7a/</guid><description>FastAPI的中间件机制允许对HTTP请求和响应进行拦截处理，适用于身份认证、日志记录、流量控制等场景。通过注册中间件，可以实现IP黑名单拦截、敏感词过滤等功能。集成JWT认证和角色权限验证，确保API的安全性。常见错误如422、401、500等可通过全局异常处理器进行统一处理。最佳实践包括启用HTTPS、使用环境变量管理敏感配置、定期更新依赖库等，以构建企业级安全的API服务。</description></item><item><title>FastAPI权限验证依赖项究竟藏着什么秘密？</title><link>/posts/3e287e8b907561728ded1be34a19b22c/</link><pubDate>Thu, 12 Jun 2025 06:53:53 +0800</pubDate><guid>/posts/3e287e8b907561728ded1be34a19b22c/</guid><description>FastAPI通过依赖注入机制实现高效的权限验证，确保系统安全。核心组件包括OAuth2与JWT基础、用户认证模块，以及权限依赖项的创建。权限验证器通过JWT解码和用户角色检查，确保访问控制。实际应用中，管理员专用接口和多角色访问控制展示了权限验证的灵活性。最佳实践包括分层验证、HTTPS传输、密钥轮换和日志记录。常见报错如422、401和403，提供了详细的调试和预防措施。运行环境要求FastAPI、Pydantic等库，确保系统稳定运行。</description></item><item><title>深入学习和理解Django模板层：构建动态页面</title><link>/posts/bea111715764852706f5ef8b2e4401e4/</link><pubDate>Sun, 05 May 2024 20:53:51 +0800</pubDate><guid>/posts/bea111715764852706f5ef8b2e4401e4/</guid><description>&lt;img src="https://static.cmdragon.cn/blog/images/2024_05_05 20_55_55.png@blog" title="2024_05_05 20_55_55.png" alt="2024_05_05 20_55_55.png"/>
&lt;h2 id="第一章模板语法基础">&lt;strong>第一章：模板语法基础&lt;/strong>&lt;/h2>
&lt;h3 id="django模板语法介绍">&lt;strong>Django模板语法介绍&lt;/strong>&lt;/h3>
&lt;p>Django模板语法是一种简洁而强大的语法，用于在HTML中插入动态数据和控制页面逻辑。以下是一些常用的模板语法元素：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>变量&lt;/strong>：使用双大括号&lt;code>{{ variable }}&lt;/code>来表示变量，可以在模板中输出变量的值。&lt;/li>
&lt;li>&lt;strong>标签&lt;/strong>：使用单大括号和百分号&lt;code>{% tag %}&lt;/code>来表示标签，用于执行控制逻辑，如for循环、if语句等。&lt;/li>
&lt;li>&lt;strong>过滤器&lt;/strong>：在变量后面使用管道符&lt;code>|&lt;/code>来应用过滤器，对变量进行处理，如格式化输出、大小写转换等。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>变量、过滤器和标签&lt;/strong>&lt;/p></description></item></channel></rss>