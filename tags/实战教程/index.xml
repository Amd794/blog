<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>实战教程 on cmdragon's Blog</title><link>/tags/%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8B/</link><description>Recent content in 实战教程 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 05 Apr 2025 18:43:12 +0800</lastBuildDate><atom:link href="/tags/%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI依赖注入：链式调用与多级参数传递</title><link>/posts/7c1206bbcb7a5ae74ef57b3d22fae599/</link><pubDate>Sat, 05 Apr 2025 18:43:12 +0800</pubDate><guid>/posts/7c1206bbcb7a5ae74ef57b3d22fae599/</guid><description>FastAPI的依赖注入系统通过链式调用和多级参数传递实现组件间的解耦和复用。核心特性包括解耦性、可复用性、可测试性和声明式依赖解析。链式依赖通过多级函数调用传递参数，如电商订单处理流程中的用户认证、VIP校验和库存检查。多级参数传递模式包括垂直传递、水平聚合和动态参数传递。常见错误如422验证错误和循环引用，可通过参数验证和依赖重构解决。最佳实践包括依赖分层、参数验证、性能优化和异步支持。</description></item></channel></rss>