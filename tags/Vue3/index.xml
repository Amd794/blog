<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue3 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Vue3/</link><description>Recent content in Vue3 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 05 Jun 2024 00:18:53 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Vue3/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue 3 Teleport：掌控渲染的艺术</title><link>https://blog.cmdragon.cn/posts/fd87cbf08f2b3ceca1e00cdb0bb4b2b0/</link><pubDate>Wed, 05 Jun 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/fd87cbf08f2b3ceca1e00cdb0bb4b2b0/</guid><description>这篇文章介绍了Vue3框架中的一个创新特性——Teleport，它允许开发者将组件内容投送到文档对象模型（DOM）中的任意位置，即使这个位置在组件的挂载点之外。Teleport旨在解决某些特定场景下的布局和嵌套问题，如 modal 对话框、弹出框或注入全局头部等。通过使用Teleport，可以更灵活地管理这些特殊组件，同时保持应用程序结构的清晰。文章可能会详细讲解Teleport的工作原理、使用方法及其对应用性能和测试的影响。</description></item><item><title>深入理解Vue 3：计算属性与侦听器的艺术</title><link>https://blog.cmdragon.cn/posts/b204a37c95c2bd49a83eec82eaa8a6a0/</link><pubDate>Thu, 30 May 2024 03:53:47 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b204a37c95c2bd49a83eec82eaa8a6a0/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_30 16_02_10.png" title="2024_05_30 16_02_10.png" alt="2024_05_30 16_02_10.png"/>
&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="vue-3的新特性简介">Vue 3的新特性简介&lt;/h3>
&lt;p>Vue.js作为当今流行的前端框架之一，以其响应式数据绑定和组件化架构著称。随着技术的不断演进，Vue
3带来了许多令人期待的新特性，这些特性不仅使得Vue.js更加高效和灵活，也为开发者提供了更好的开发体验。&lt;/p></description></item><item><title>Vue3使用Composition API实现响应式</title><link>https://blog.cmdragon.cn/posts/89cac727dc9ef0b595e8feeac10dc501/</link><pubDate>Wed, 29 May 2024 08:10:24 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/89cac727dc9ef0b595e8feeac10dc501/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_29 20_15_53.png" title="2024_05_29 20_15_53.png" alt="2024_05_29 20_15_53.png"/>
&lt;h2 id="1-介绍">1. 介绍&lt;/h2>
&lt;p>Composition API是Vue.js 3中新增的一组API，用于在组件中组合逻辑和功能。它可以让你更好地组织和重用代码，使组件更易于理解和维护。在使用Composition
API时，你可以使用&lt;code>&amp;lt;script setup&amp;gt;&lt;/code>语法或&lt;code>setup()&lt;/code>函数，两种方式都可以使用Composition API中的响应式API、生命周期钩子、模板引用和自定义渲染函数等特性。&lt;/p></description></item></channel></rss>