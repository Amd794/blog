<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>协程机制 on cmdragon's Blog</title><link>/tags/%E5%8D%8F%E7%A8%8B%E6%9C%BA%E5%88%B6/</link><description>Recent content in 协程机制 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 19 Apr 2025 00:13:05 +0800</lastBuildDate><atom:link href="/tags/%E5%8D%8F%E7%A8%8B%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>异步编程与Tortoise-ORM框架</title><link>/posts/5265d648f0fd4ea5e11af203bc59301d/</link><pubDate>Sat, 19 Apr 2025 00:13:05 +0800</pubDate><guid>/posts/5265d648f0fd4ea5e11af203bc59301d/</guid><description>异步编程通过async/await语法实现协程，单线程可处理多个并发请求，适合IO密集型场景。Tortoise-ORM专为异步设计，支持完整ORM功能和多种数据库，与Pydantic深度集成。整合FastAPI时，通过&lt;code>register_tortoise&lt;/code>初始化ORM，使用&lt;code>in_transaction&lt;/code>管理事务，确保操作原子性。常见问题包括未使用await返回协程对象和事件循环关闭错误，需通过正确的事件循环启动和事务管理解决。</description></item></channel></rss>