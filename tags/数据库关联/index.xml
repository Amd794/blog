<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库关联 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E8%81%94/</link><description>Recent content in 数据库关联 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 26 Apr 2025 12:25:42 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E8%81%94/index.xml" rel="self" type="application/rss+xml"/><item><title>Tortoise-ORM级联查询与预加载性能优化</title><link>https://blog.cmdragon.cn/posts/b7ffdb2ec4d5eaa0388deddba3d07212/</link><pubDate>Sat, 26 Apr 2025 12:25:42 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b7ffdb2ec4d5eaa0388deddba3d07212/</guid><description>Tortoise-ORM通过异步方式实现级联查询与预加载机制，显著提升API性能。模型关联关系基础中，定义一对多关系如作者与文章。级联查询通过&lt;code>select_related&lt;/code>方法实现，预加载通过&lt;code>prefetch_related&lt;/code>优化N+1查询问题。实战中，构建高效查询接口，如获取作者详情及最近发布的文章。高级技巧包括嵌套关联预加载、条件预加载和自定义预加载方法。常见报错处理如&lt;code>RelationNotFoundError&lt;/code>、&lt;code>QueryTimeoutError&lt;/code>和&lt;code>ValidationError&lt;/code>。最佳实践建议包括测试环境查询分析、添加Redis缓存层、添加数据库索引和分页限制返回数据量。</description></item></channel></rss>