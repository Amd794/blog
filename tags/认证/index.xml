<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>认证 on cmdragon's Blog</title><link>/tags/%E8%AE%A4%E8%AF%81/</link><description>Recent content in 认证 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 03 Oct 2024 00:18:53 +0800</lastBuildDate><atom:link href="/tags/%E8%AE%A4%E8%AF%81/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt.js 应用中的 app：redirected 钩子详解</title><link>/posts/0a403b28ba9828265f24d658ed1d54d5/</link><pubDate>Thu, 03 Oct 2024 00:18:53 +0800</pubDate><guid>/posts/0a403b28ba9828265f24d658ed1d54d5/</guid><description>app:redirected 是 Nuxt.js 中的一个钩子，主要用于处理服务器端渲染（SSR）过程中发生的重定向。该钩子在重定向被执行之前被调用，允许开发者在重定向发生前进行一些操作，比如执行条件检查、日志记录等。</description></item><item><title>使用 defineNuxtRouteMiddleware 创建路由中间件</title><link>/posts/9820edb9b255785446531ea7b1ac2269/</link><pubDate>Sat, 10 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/9820edb9b255785446531ea7b1ac2269/</guid><description>本篇文章介绍了如何使用 &lt;code>defineNuxtRouteMiddleware&lt;/code> 创建和应用路由中间件。通过示例演示了如何处理错误页面和身份验证逻辑。随着对 Nuxt.js 中间件的理解，你可以更灵活地控制应用的路由行为，从而提升用户体验。</description></item></channel></rss>