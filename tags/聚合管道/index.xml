<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>聚合管道 on cmdragon&#39;s Blog</title>
    <link>https://blog.cmdragon.cn/tags/%E8%81%9A%E5%90%88%E7%AE%A1%E9%81%93/</link>
    <description>Recent content in 聚合管道 on cmdragon&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 May 2025 16:04:31 +0800</lastBuildDate>
    <atom:link href="https://blog.cmdragon.cn/tags/%E8%81%9A%E5%90%88%E7%AE%A1%E9%81%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FastAPI与MongoDB分片集群：异步数据路由与聚合优化</title>
      <link>https://blog.cmdragon.cn/posts/d76caa4fa21663a571b5402f6c338e4d/</link>
      <pubDate>Mon, 26 May 2025 16:04:31 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/d76caa4fa21663a571b5402f6c338e4d/</guid>
      <description>FastAPI与MongoDB分片集群集成实战探讨了分片集群的核心概念、Motor驱动配置技巧、分片数据路由策略、聚合管道高级应用、分片索引优化方案及常见报错解决方案。分片集群通过将数据集分割成多个片段，适合处理大规模数据和高并发场景。Motor驱动的异步特性需要合理配置连接池参数。分片策略包括哈希分片、范围分片和复合分片，结合业务需求选择。聚合管道优化策略包括使用分片键过滤、避免跨分片连接和处理大型数据集。分片索引优化原则是优先使用覆盖查询的复合索引。常见报错解决方案涉及连接超时、排序问题和查询超时等。</description>
    </item>
    <item>
      <title>异步之舞：FastAPI与MongoDB的极致性能优化之旅</title>
      <link>https://blog.cmdragon.cn/posts/e63cc4b272abe6d8f909bf698d205977/</link>
      <pubDate>Fri, 23 May 2025 21:55:11 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/e63cc4b272abe6d8f909bf698d205977/</guid>
      <description>FastAPI与MongoDB的异步写入优化通过Motor驱动实现非阻塞I/O操作，显著提升吞吐量。Motor驱动深度集成支持批量写入优化，使用bulk_write方法比单条插入快10倍以上。聚合管道性能调优通过索引优化策略和典型聚合场景提升查询效率。实战案例展示了构建可处理10万TPS的日志处理API，通过批量插入和异步操作实现高效日志处理。常见报错解决方案包括验证错误处理和预防建议，确保API稳定性和数据完整性。</description>
    </item>
    <item>
      <title>异步日志分析：MongoDB与FastAPI的高效存储揭秘</title>
      <link>https://blog.cmdragon.cn/posts/1963035336232d8e37bad41071f21fba/</link>
      <pubDate>Thu, 22 May 2025 17:04:56 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/1963035336232d8e37bad41071f21fba/</guid>
      <description>MongoDB与FastAPI集成构建日志分析系统，通过Motor驱动实现异步操作，提升数据处理效率。使用Pydantic进行数据验证，配置环境变量，创建REST API端点。聚合管道用于日志统计，如按级别分组计数。索引优化策略通过创建复合索引和文本索引，显著提升查询性能。完整案例实现错误追踪和日志搜索功能。常见报错包括422验证错误和连接超时，提供具体解决方案。课后Quiz强调索引优化、高效分页和写入可靠性。</description>
    </item>
    <item>
      <title>MongoDB索引优化的艺术：从基础原理到性能调优实战</title>
      <link>https://blog.cmdragon.cn/posts/00dab3c9b6d60d849938dede981db2c4/</link>
      <pubDate>Wed, 21 May 2025 18:08:22 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/00dab3c9b6d60d849938dede981db2c4/</guid>
      <description>MongoDB索引优化与性能调优的核心策略包括：索引基础原理，如单字段、复合、唯一和TTL索引；索引创建与管理，通过FastAPI集成Motor实现；查询性能优化，使用Explain分析、覆盖查询和聚合管道优化；实战案例，如电商平台订单查询优化；常见报错解决方案，如索引创建失败、查询性能下降和文档扫描过多问题。这些策略能显著提升查询速度和系统性能。</description>
    </item>
    <item>
      <title>解锁FastAPI与MongoDB聚合管道的性能奥秘</title>
      <link>https://blog.cmdragon.cn/posts/4758340c2a266ca0e12a35ca53dd0d19/</link>
      <pubDate>Tue, 20 May 2025 20:24:47 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/4758340c2a266ca0e12a35ca53dd0d19/</guid>
      <description>MongoDB聚合管道是一种分阶段处理数据的流水线，通过$match、$group等阶段对文档进行特定操作，具有内存优化和原生操作的优势。聚合查询常用阶段包括$match、$group、$project等，适用于订单分析等场景。优化策略包括遵循ESR原则创建索引、使用$facet实现高效分页。常见错误如内存限制和游标配置问题，可通过添加&lt;code&gt;allowDiskUse=True&lt;/code&gt;和正确处理游标解决。进阶技巧包括使用$expr实现复杂逻辑、日期处理和条件投影。</description>
    </item>
    <item>
      <title>异步之舞：Motor驱动与MongoDB的CRUD交响曲</title>
      <link>https://blog.cmdragon.cn/posts/8951a96002e90534fea707cbc0ebe102/</link>
      <pubDate>Mon, 19 May 2025 15:30:10 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/8951a96002e90534fea707cbc0ebe102/</guid>
      <description>Motor 异步驱动是专为 Python 异步框架设计的 MongoDB 连接器，基于 asyncio 实现非阻塞 I/O 操作，提升 FastAPI 的并发处理能力。通过 CRUD 操作示例，展示了如何使用 &lt;code&gt;insert_one&lt;/code&gt;、&lt;code&gt;find&lt;/code&gt;、&lt;code&gt;update_one&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 方法进行文档的创建、查询、更新和删除。聚合管道用于统计用户年龄分布，索引优化策略包括单字段索引和复合索引，遵循 ESR 规则提升查询性能。常见报错如 &lt;code&gt;ServerSelectionTimeoutError&lt;/code&gt;、&lt;code&gt;ValidationError&lt;/code&gt; 和 &lt;code&gt;DuplicateKeyError&lt;/code&gt; 的处理方法也进行了详细说明。</description>
    </item>
    <item>
      <title>异步之舞：FastAPI与MongoDB的深度协奏</title>
      <link>https://blog.cmdragon.cn/posts/b448df6a7d6354d67c30d7a4a46d0c0c/</link>
      <pubDate>Sun, 18 May 2025 19:09:08 +0800</pubDate>
      <guid>https://blog.cmdragon.cn/posts/b448df6a7d6354d67c30d7a4a46d0c0c/</guid>
      <description>MongoDB与FastAPI的基础集成方法。首先，环境要求包括Python 3.8+、MongoDB 4.4+、FastAPI 0.95+和Motor 3.1+，并提供了依赖安装命令。其次，通过Motor驱动配置异步数据库连接，使用Pydantic进行数据验证，并实现异步CRUD操作。此外，还展示了聚合管道实践和索引优化策略，如创建单字段索引、复合索引和文本索引。最后，提供了常见报错的解决方案，如ServerSelectionTimeoutError、ValidationError和查询性能低下的处理方法。</description>
    </item>
  </channel>
</rss>
