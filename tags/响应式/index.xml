<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>响应式 on cmdragon's Blog</title><link>/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/</link><description>Recent content in 响应式 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 30 Sep 2024 00:18:53 +0800</lastBuildDate><atom:link href="/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>理解 Vue 的 setup 应用程序钩子</title><link>/posts/6ed51fb844f1329c26155ff2a6ea4cd2/</link><pubDate>Mon, 30 Sep 2024 00:18:53 +0800</pubDate><guid>/posts/6ed51fb844f1329c26155ff2a6ea4cd2/</guid><description>摘要：本文详细介绍了Vue 3中setup函数的应用，包括其概念、特性、使用方法及重要性。setup函数作为组合API的核心，在组件实例化前被调用，用于设置响应式状态、计算属性、方法和生命周期钩子，支持在SSR和CSR中使用。</description></item><item><title>使用 useState 管理响应式状态</title><link>/posts/760deff1b835b737dc6396ad0e4cc8d4/</link><pubDate>Thu, 01 Aug 2024 00:18:53 +0800</pubDate><guid>/posts/760deff1b835b737dc6396ad0e4cc8d4/</guid><description>摘要：本文详细介绍了在Nuxt3框架中使用useState进行响应式状态管理的方法，包括其基本概念、优势、使用方法、共享状态实现以及性能优化技巧。useState支持服务器端渲染（SSR），可创建响应式状态并在组件间共享，通过具体示例展示了其基本用法、如何在多个组件间共享状态以及使用shallowRef提升性能。</description></item></channel></rss>