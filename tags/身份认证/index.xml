<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>身份认证 on cmdragon's Blog</title><link>/tags/%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/</link><description>Recent content in 身份认证 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 10 Jun 2025 09:02:35 +0800</lastBuildDate><atom:link href="/tags/%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/index.xml" rel="self" type="application/rss+xml"/><item><title>JWT令牌如何在FastAPI中实现安全又高效的生成与验证？</title><link>/posts/df4422756c7a081ea0f7f16c6364d8b2/</link><pubDate>Tue, 10 Jun 2025 09:02:35 +0800</pubDate><guid>/posts/df4422756c7a081ea0f7f16c6364d8b2/</guid><description>JWT（JSON Web Token）是一种用于安全传递声明信息的开放标准，由头部、载荷和签名三部分组成。在FastAPI中，JWT常用于用户身份认证、API授权和跨服务通信。通过&lt;code>python-jose&lt;/code>库生成和验证JWT，核心步骤包括配置安全参数、生成访问令牌、实现登录接口和验证机制。令牌生成时需设置过期时间以防止长期盗用，验证时通过中间件检查令牌的有效性。此外，可通过刷新令牌机制更新访问令牌，确保系统的安全性和用户体验。</description></item><item><title>JWT令牌：从身份证到代码防伪的奇妙之旅</title><link>/posts/a39277914464b007ac61874292578de0/</link><pubDate>Tue, 03 Jun 2025 23:14:07 +0800</pubDate><guid>/posts/a39277914464b007ac61874292578de0/</guid><description>JWT（JSON Web Token）是一种用于安全传输信息的开放标准，由Header、Payload和Signature三部分组成。Header描述算法和令牌类型，Payload存放实际数据，Signature通过密钥和算法生成，确保数据未被篡改。PyJWT库可用于生成和验证JWT令牌，FastAPI框架中可通过OAuth2PasswordBearer实现身份验证。常见问题包括签名验证失败和令牌过期，需确保密钥一致并定期轮换。JWT适用于身份认证和信息交换，但需避免在Payload中存储敏感数据。</description></item><item><title>数据库安全管理中的用户和角色管理：打造安全高效的数据环境</title><link>/posts/92d56b1325c898ad3efc89cb2b42d84d/</link><pubDate>Sat, 01 Feb 2025 00:18:53 +0800</pubDate><guid>/posts/92d56b1325c898ad3efc89cb2b42d84d/</guid><description>在数字化时代，数据库作为信息存储和处理的核心，安全管理显得尤为重要。用户和角色管理是保障数据库安全性的重要手段，合理的管理策略不仅能够有效控制访问，还能避免数据泄露和未授权操作。</description></item><item><title>探究HMAC算法：消息认证与数据完整性的完美结合</title><link>/posts/6b95c04847671c014b7cd2a9f314acfa/</link><pubDate>Thu, 01 Feb 2024 15:56:00 +0800</pubDate><guid>/posts/6b95c04847671c014b7cd2a9f314acfa/</guid><description>&lt;img src="../../images/2024_02_01 15_55_17.png" alt="2024_02_01 15_55_17.png@blog" title="2024_02_01 15_55_17.png">
&lt;blockquote>
&lt;p>Hash-based Message Authentication Code（基于哈希的消息认证码，简称HMAC）算法作为一种广泛应用的消息认证码（MAC）算法，在现代信息安全领域起着至关重要的作用。本文将从算法原理、优缺点、实际应用等方面，全面介绍和解释HMAC算法。&lt;/p></description></item><item><title>MD5在文件安全中的应用与重要性</title><link>/posts/a7f05ea5e6130f07a25b75864734b701/</link><pubDate>Fri, 19 Jan 2024 16:50:00 +0800</pubDate><guid>/posts/a7f05ea5e6130f07a25b75864734b701/</guid><description>&lt;img src="../../images/2024_02_03 16_31_34.png" title="2024_02_03 16_31_34.png" alt="2024_02_03 16_31_34.png"/>
&lt;h2 id="一md5简介">一、MD5简介&lt;/h2>
&lt;p>MD5（Message-Digest Algorithm 5）是一种广泛应用的密码散列函数，由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）于1992年提出。它主要用于对任意长度的消息或文件进行加密，生成一个128位的固定长度的摘要（hash value），从而实现数据的完整性验证和身份认证。&lt;/p></description></item></channel></rss>