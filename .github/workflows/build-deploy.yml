name: Build and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# 设置权限
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # 添加环境变量
    env:
      NODE_ENV: production
      HUGO_ENV: production
    
    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录以支持分支操作
      
      # 设置Node.js环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 使用稳定版本的Node.js
          cache: 'npm'  # 缓存npm依赖加速构建

      # 安装依赖
      - name: Install Dependencies
        run: |
          echo "正在安装npm依赖..."
          npm ci || npm install
          echo "依赖安装完成"
          npm list --depth=0
          # 确保typography插件已安装
          if ! npm list @tailwindcss/typography; then
            npm install @tailwindcss/typography
          fi
        
      # 构建TailwindCSS
      - name: Build TailwindCSS
        run: |
          echo "正在构建TailwindCSS..."
          npm run build:css
          echo "TailwindCSS构建完成"
          ls -la assets/css/
      
      # 设置Hugo环境
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true  # 使用Hugo Extended版本以支持SASS/SCSS
      
      # 构建Hugo项目
      - name: Build with Hugo
        run: |
          echo "正在构建Hugo站点..."
          hugo --gc --minify
          echo "Hugo站点构建完成"
          ls -la public/css/
          # 确保tailwind.min.css已被复制到public目录
          if [ ! -f public/css/tailwind.min.css ]; then
            echo "警告：TailwindCSS编译后文件未在public目录中找到"
            mkdir -p public/css
            cp assets/css/tailwind.min.css public/css/
          fi
      
      # 部署到public分支
      - name: Deploy to public branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public  # Hugo默认输出目录
          branch: public  # 目标部署分支
          clean: true     # 自动删除目标分支上的旧文件
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub提供的token



